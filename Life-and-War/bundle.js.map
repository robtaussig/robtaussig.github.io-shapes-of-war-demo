{"version":3,"sources":["webpack:///webpack/bootstrap 50d09c0238c4b26bc91d","webpack:///./Life-and-War/entry.js","webpack:///./Life-and-War/views/map.js","webpack:///./Life-and-War/views/interface.js","webpack:///./Life-and-War/views/country.js","webpack:///./Life-and-War/views/wave.js","webpack:///./Life-and-War/views/moving_object.js","webpack:///./Life-and-War/views/boat.js","webpack:///./Life-and-War/views/information_screen.js","webpack:///./Life-and-War/game_logic/world.js","webpack:///./Life-and-War/game_logic/countries.js","webpack:///./Life-and-War/game_logic/beings.js","webpack:///./Life-and-War/handlers/game.js","webpack:///./Life-and-War/handlers/logic_bridge.js","webpack:///./Life-and-War/handlers/player.js","webpack:///./Life-and-War/views/utils.js","webpack:///./Life-and-War/views/game_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACrCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kDAAiD,+BAA+B;AAChF;AACA;AACA,EAAC;;;;;;;;ACfD;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;AAIA;;;;;;;AC/BA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA,MAAK;AACL,qBAAoB,yBAAyB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,wBAAwB;AAC5C;AACA;AACA;;AAEA;AACA,qBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA,qBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP,qBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,kEAAkE;AAC3F;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,kEAAkE;AAC3F;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,kEAAkE;AAC3F;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,kEAAkE;AAC3F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,kEAAkE;AAC3F;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,kEAAkE;AAC3F;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,kEAAkE;AAC3F;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,kEAAkE;AAC3F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,mBAAmB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,oEAAoE;AAC7F;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,oEAAoE;AAC7F;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,oEAAoE;AAC7F;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,oEAAoE;AAC7F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,+DAA+D;AACxF;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,+DAA+D;AACxF;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,+DAA+D;AACxF;AACA;AACA,qBAAoB,oBAAoB;AACxC;AACA,0BAAyB,+DAA+D;AACxF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,mBAAkB,wBAAwB;AAC1C;AACA;AACA;;AAEA,mBAAkB,wBAAwB;AAC1C;AACA;AACA;;AAEA,mBAAkB,wBAAwB;AAC1C;AACA;AACA;;AAEA,mBAAkB,wBAAwB;AAC1C;AACA;AACA;;AAEA,mBAAkB,wBAAwB;AAC1C;AACA;AACA;;AAEA,mBAAkB,wBAAwB;AAC1C;AACA;AACA;;AAEA;;AAEA,mBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;ACzXA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;AC/nBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;AAIA;;;;;;;AC7DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACbA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;AC9MA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL,qBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,qBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA,gBAAe,qBAAqB;AACpC;AACA;AACA;AACA,uBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;;AAEA,qBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;;AAEA,qBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;;AAEA;;AAEA;;;;;;;;AC/gCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,gBAAgB,WAAW;AACtD,oBAAmB,kBAAkB;;AAErC,IAAG;AACH;;AAEA;;;;;;;AC7FA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;;AAEH;AACA;AACA,IAAG;AACH;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,kBAAiB,iBAAiB,IAAI,UAAU,IAAI,iBAAiB;AACrE,OAAM,eAAe,aAAa,GAAG,cAAc;AACnD,aAAY,GAAG,cAAc,6BAA6B,GAAG;AAC7D;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,eAAe,EAAE,qBAAqB;AACvD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mDAAkD,4IAA4I;AAC9L,MAAK;AACL,qCAAoC,0CAA0C;AAC9E;AACA,6BAA4B,0CAA0C;;AAEtE,oBAAmB,QAAQ;AAC3B,8CAA6C,qDAAqD;AAClG;AACA,uCAAsC,0CAA0C;AAChF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,6FAA6F;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;;ACpcA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACpBA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;;;;AAKA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 50d09c0238c4b26bc91d\n **/","\nconst Game = require('./handlers/game.js');\nconst GameView = require('./views/game_view.js');\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementById(\"canvas\");\n  canvasEl.height = window.innerHeight - 50;\n  canvasEl.width = window.innerWidth - 50;\n\n  let ctx = canvasEl.getContext('2d');\n\n  const game = new Game();\n  canvasEl.addEventListener('click', (event) => {game.handleClick(game, event);});\n  const gameView = new GameView(game,ctx);\n  gameView.start();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/entry.js\n ** module id = 0\n ** module chunks = 0\n **/","const DEFAULTS = {\n  color: \"blue\",\n  width: 720,\n  height: 720\n};\n\nclass GameMap  {\n  constructor (options = {}) {\n    let settings = Object.assign(DEFAULTS,options);\n    this.width = settings.width;\n    this.height = settings.height;\n    this.color = settings.color;\n    this.game = settings.game;\n  }\n\n  draw (ctx) {\n    // Water\n    ctx.beginPath();\n    ctx.rect(0, this.height / 10, this.width * 0.70, this.height * 0.9);\n    ctx.fillStyle = this.color;\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'black';\n    ctx.stroke();\n    ctx.fill();\n\n  }\n\n}\n\n\n\nmodule.exports = GameMap;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/views/map.js\n ** module id = 2\n ** module chunks = 0\n **/","const Utils = require('./utils.js');\n\nconst DEFAULTS = {\n  color: \"#41a277\",\n  width: 1200,\n  height: 800\n};\n\nclass Interface {\n  constructor (options = {}) {\n    let settings = Object.assign(DEFAULTS,options);\n    this.width = settings.width;\n    this.height = settings.height;\n    this.color = settings.color;\n    this.unselectedColor = \"black\";\n    this.instructions = false;\n    this.game = settings.game;\n    this.stage = \"beginning\";\n    this.messages = [\"Welcome, my liege. Your first task as our new leader is \"+\n    \"to pick a country on which to establish a base. The countries can vary \"+\n    \"in three relevant attributes: climate, size, and usable land. The former \"+\n    \"two can be deduced from maps that we have recovered, where the color \"+\n    \"(from white to orange) reflects the climate, coldest to hottest. We can \"+\n    \"only guess how much of the land is actually usable.\", \"Also, before I \"+\n    \"forget, you shouldn't be too quick to pick the greenest pastures. \"+\n    \"Victory is measured not by mere survival, but by thriving in your \" +\n    \"environment. With harsh conditions, our people will become stronger than \"+\n    \"they would in an environment where nothing is testing for desirable \"+\n    \"traits. Those with negative traits will be just as likely to multiply \"+\n    \"as those fortunate in the genetic lottery. While our short-term \"+\n    \"prospects of survival in a harsh climate will be challenged, I have no \"+\n    \"doubt that the brave will eventually be rewarded for their endurance.\"];\n    this.milText = [\"Start war\",\"Fortify defenses\", \"Draft soldiers\", \"Increase funding\"];\n    this.domText = [\"Encourage \\\"multiplication\\\"\",\"Increase taxes\", \"Increase production\", \"Improve morale\"];\n    this.techText = [\"Next age\",\"Military research\", \"Domestic research\", \"Shady research\"];\n    this.shadyText = [\"Kidnap Princess\",\"Frame enemy King\", \"Send Trojan Cube\", \"Spread propaganda\"];\n    this.selected = \"\";\n  }\n\n  giveInstructions () {\n    this.stage = \"instructions\";\n  }\n\n  setMessage (msg) {\n    this.message = msg;\n  }\n\n  setMilText (array) {\n    this.milText = array;\n  }\n\n  setDomText (array) {\n    this.domText = array;\n  }\n\n  goBetweenAges () {\n    this.stage = \"betweenAges\";\n    this.unselectedColor = this.game.currentAge === 0 ? \"grey\" : \"black\";\n  }\n\n  setTechText (array) {\n    this.techText = array;\n  }\n\n  setShadyText (array) {\n    this.shadyText = array;\n  }\n\n  resumeGame () {\n    this.stage = \"\";\n    this.unselectedColor = \"grey\";\n  }\n\n  setSelected (text) {\n    if (text !== \"ignore\") {\n      this.selected = text;\n    }\n  }\n\n  startGame () {\n    this.stage = \"pickCountry\";\n  }\n\n  checkFunc() {\n    return this.message;\n  }\n\n  draw (ctx) {\n    // Sidebar\n    ctx.beginPath();\n    ctx.rect(this.width * 0.70, this.height / 10 + 2, this.width * 0.30, this.height * 0.9 - 2);\n    ctx.fillStyle = \"#a4f1eb\";\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'black';\n    ctx.stroke();\n    ctx.fill();\n\n    if (this.stage === \"beginning\") {\n      ctx.font = `${this.height * 0.008 + 3}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = 'black';\n      ctx.fillText(\"Shapes of War - Designed and coded by Robert Taussig.\", this.width * 0.85 + 3,this.height * 0.95);\n      ctx.fillText(\"I sincerely hope you enjoy the game.\", this.width * 0.85 + 3,this.height * 0.975);\n    } else if (this.stage === \"instructions\") {\n      ctx.font = `${this.height * 0.0125 + 3}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = 'black';\n      ctx.fillText(\"Instructions to be added here\", this.width * 0.85 + 3,this.height * 0.125);\n\n      //start button\n      ctx.beginPath();\n      ctx.rect(this.width * 0.8, this.height * 0.8, this.width * 0.1, this.height * 0.1);\n      ctx.fillStyle = \"limegreen\";\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fill();\n\n      ctx.font = `${this.height * 0.015 + 4}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = 'black';\n      ctx.fillText(\"Got it!\", this.width * 0.85,this.height * 0.86);\n\n      //footer\n      ctx.font = `${this.height * 0.008 + 3}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = 'black';\n      ctx.fillText(\"Shapes of War - Designed and coded by Robert Taussig.\", this.width * 0.85 + 3,this.height * 0.95);\n      ctx.fillText(\"I sincerely hope you enjoy the game.\", this.width * 0.85 + 3,this.height * 0.975);\n    } else if (this.stage === \"pickCountry\") {\n      let firstLines = Utils.fragmentText(this.messages[0],\n        this.width * 0.31 - parseInt(this.height * 0.018,0), ctx);\n\n      let secondLines = Utils.fragmentText(this.messages[1],\n        this.width * 0.31 - parseInt(this.height * 0.018,0), ctx);\n\n      ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = '#3e3838';\n      firstLines.forEach((line, i) => {\n        ctx.fillText(line, this.width * 0.85, (i + 1) *\n        parseInt(this.height * 0.025 + 5,0) + this.height * 0.15);\n      });\n\n      ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = '#3e3838';\n      secondLines.forEach((line, i) => {\n        ctx.fillText(line, this.width * 0.85, (i + 1) *\n        parseInt(this.height * 0.025 + 5,0) + this.height * 0.5);\n      });\n    } else if (this.game.currentAge > 0){\n      // Military Move\n      ctx.beginPath();\n      ctx.rect(this.width * 0.85 + 2, this.height / 6, this.width * 0.15 - 2, this.height * 0.3);\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = \"white\";\n      ctx.fill();\n\n    //Military Text\n      //Title\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = \"black\";\n      ctx.fillText(\"Military Move\", this.width * 0.925, this.height / 6 - this.height * 0.015);\n      //Option1\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"military-1\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.milText[0], this.width * 0.925, this.height / 6 + this.height * 0.03);\n      //Option2\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"military-2\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.milText[1], this.width * 0.925, this.height / 6 + this.height * 0.1);\n      //Option3\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"military-3\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.milText[2], this.width * 0.925, this.height / 6 + this.height * 0.17);\n      //Option4\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"military-4\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.milText[3], this.width * 0.925, this.height / 6 + this.height * 0.24);\n\n      // Domestic Move\n      ctx.beginPath();\n      ctx.rect(this.width * 0.70, this.height / 6, this.width * 0.15, this.height * 0.3);\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = \"white\";\n      ctx.fill();\n\n    //Domestic Text\n      //Title\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = \"black\";\n      ctx.fillText(\"Domestic Move\", this.width * 0.775, this.height / 6 - this.height * 0.015);\n      //Option1\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"domestic-1\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.domText[0], this.width * 0.775, this.height / 6 + this.height * 0.03);\n      //Option2\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"domestic-2\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.domText[1], this.width * 0.775, this.height / 6 + this.height * 0.1);\n      //Option3\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"domestic-3\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.domText[2], this.width * 0.775, this.height / 6 + this.height * 0.17);\n      //Option4\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"domestic-4\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.domText[3], this.width * 0.775, this.height / 6 + this.height * 0.24);\n\n      //Request Council\n      ctx.beginPath();\n      ctx.rect(this.width * 0.70, this.height *0.5, this.width * 0.30, this.height * 0.07);\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = \"gold\";\n      ctx.fill();\n      //Request text\n      ctx.font = `${this.height * 0.02}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = this.game.currentAge === 0 ? \"grey\" : \"black\";\n      ctx.fillText(\"Send a request for council\", this.width * 0.85, this.height * 0.545);\n\n      // Technology Move\n      ctx.beginPath();\n      ctx.rect(this.width * 0.70, this.height / 6 + this.height * 0.45, this.width * 0.15, this.height * 0.3);\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = \"white\";\n      ctx.fill();\n\n    //Technology Text\n      //Title\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = \"black\";\n      ctx.fillText(\"Technology Move\", this.width * 0.775, this.height / 6 + this.height * 0.45 - this.height * 0.015);\n      //Option1\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"technology-1\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.techText[0], this.width * 0.775, this.height / 6 + this.height * 0.48);\n      //Option2\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"technology-2\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.techText[1], this.width * 0.775, this.height / 6 + this.height * 0.55);\n      //Option3\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"technology-3\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.techText[2], this.width * 0.775, this.height / 6 + this.height * 0.62);\n      //Option4\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"technology-4\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.techText[3], this.width * 0.775, this.height / 6 + this.height * 0.69);\n\n      // Shady Move\n      ctx.beginPath();\n      ctx.rect(this.width * 0.85 + 2, this.height / 6 + this.height * 0.45, this.width * 0.15 - 2, this.height * 0.3);\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = \"white\";\n      ctx.fill();\n    //Shady Text\n      //Title\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = \"black\";\n      ctx.fillText(\"Shady Move\", this.width * 0.925, this.height / 6 + this.height * 0.45 - this.height * 0.015);\n      //Option1\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"shady-1\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.shadyText[0], this.width * 0.925, this.height / 6 + this.height * 0.48);\n      //Option2\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"shady-2\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.shadyText[1], this.width * 0.925, this.height / 6 + this.height * 0.55);\n      //Option3\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"shady-3\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.shadyText[2], this.width * 0.925, this.height / 6 + this.height * 0.62);\n      //Option4\n      ctx.font = `${this.height * 0.015}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = `${(this.selected === \"shady-4\") ? 'green' : this.unselectedColor}`;\n      ctx.fillText(this.shadyText[3], this.width * 0.925, this.height / 6 + this.height * 0.69);\n\n      //submit command button\n\n      ctx.beginPath();\n      ctx.rect(this.width * 0.81,this.height * 0.928, this.width * 0.08, this.height * 0.06);\n      ctx.fillStyle = 'limegreen';\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fill();\n\n      ctx.font = `${this.height * 0.0125 + 5}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = this.game.currentAge === 0 ? 'grey' : 'black';\n      ctx.fillText(\"Make it so!\", this.width * 0.85 + 3,this.height * 0.965);\n    }\n\n    // Header\n    ctx.beginPath();\n    ctx.rect(0, 0, this.width, this.height / 10);\n    ctx.fillStyle = this.color;\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'black';\n    ctx.stroke();\n    ctx.fill();\n\n\n    //for testing\n    ctx.font = `${this.height * 0.008 + 3}pt helvetica`;\n    ctx.textAlign = 'center';\n    ctx.fillStyle = 'black';\n    ctx.fillText(\"For testing only\", this.width * 0.03, this.height * 0.055);\n\n    ctx.font = `${this.height * 0.008 + 3}pt helvetica`;\n    ctx.textAlign = 'center';\n    ctx.fillStyle = 'black';\n    ctx.fillText(\"start game\", this.width * 0.10, this.height * 0.055);\n\n    ctx.font = `${this.height * 0.008 + 3}pt helvetica`;\n    ctx.textAlign = 'center';\n    ctx.fillStyle = 'black';\n    ctx.fillText(\"instructions\", this.width * 0.15, this.height * 0.055);\n\n    ctx.font = `${this.height * 0.008 + 3}pt helvetica`;\n    ctx.textAlign = 'center';\n    ctx.fillStyle = 'black';\n    ctx.fillText(\"make decision\", this.width * 0.2, this.height * 0.055);\n\n    ctx.font = `${this.height * 0.008 + 3}pt helvetica`;\n    ctx.textAlign = 'center';\n    ctx.fillStyle = 'black';\n    ctx.fillText(\"between ages\", this.width * 0.26, this.height * 0.055);\n\n    ctx.font = `${this.height * 0.008 + 3}pt helvetica`;\n    ctx.textAlign = 'center';\n    ctx.fillStyle = 'black';\n    ctx.fillText(\"resume game\", this.width * 0.33, this.height * 0.055);\n\n    // Header Text\n\n    ctx.font = `${this.height * 0.025}pt helvetica`;\n    ctx.textAlign = 'center';\n    ctx.fillStyle = 'black';\n    ctx.fillText(this.message, this.width * 0.5, this.height * 0.06);\n  }\n}\n\n\n\nmodule.exports = Interface;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/views/interface.js\n ** module id = 3\n ** module chunks = 0\n **/","const DEFAULTS = {\n  color: \"green\",\n  width: 720,\n  height: 720,\n  startingX: 0,\n  startingY: 0,\n};\n\nclass Country {\n  constructor (options = {}) {\n    let settings = Object.assign(DEFAULTS, options);\n    this.size = settings.size / 2000;\n    this.width = settings.width * 0.27 * this.size;\n    this.height = settings.height * 0.21 * this.size;\n    this.game = settings.game;\n    this.id = settings.countryNo;\n    this.climate = settings.climate;\n    switch (true) {\n      case this.climate > 90:\n      this.color = \"orange\";\n        break;\n      case this.climate > 75:\n      this.color = \"green\";\n        break;\n      case this.climate > 60:\n      this.color = \"lightblue\";\n        break;\n      case this.climate > 50:\n      this.color = \"white\";\n        break;\n    }\n\n    this.placement = this._setPlacement(settings.countryNo);\n    this.building = \"\";\n  }\n\n  upgradeBuilding () {\n    switch (this.building) {\n      case \"\":\n        this.building = \"cave\";\n        break;\n      case \"cave\":\n        this.building = \"hut\";\n        break;\n      case \"hut\":\n        this.building = \"castle\";\n        break;\n      case \"castle\":\n        this.building = \"tower\";\n        break;\n      default:\n\n    }\n  }\n\n  _setPlacement (countryNo) {\n    let placement = {};\n    if (countryNo === 0) {\n      placement.height = (window.innerHeight) * 0.22;\n      placement.width = (window.innerWidth) * 0.03;\n    } else if (countryNo === 1) {\n      placement.height = (window.innerHeight) * 0.65;\n      placement.width = (window.innerWidth) * 0.03;\n    } else if (countryNo === 2) {\n      placement.height = (window.innerHeight) * 0.22;\n      placement.width = (window.innerWidth) * 0.4;\n    } else if (countryNo === 3) {\n      placement.height = (window.innerHeight) * 0.65;\n      placement.width = (window.innerWidth) * 0.4;\n    }\n    return placement;\n  }\n\n  setColor(color) {\n    this.color = color;\n  }\n\n  takeFire () {\n    this.color = 'red';\n  }\n\n  randomToggle(rate, color = \"yellow\") {\n    let time = new Date().getMilliseconds();\n    if (time < rate*10) {\n      return color === \"yellow\" ? \"black\" : \"yellow\";\n    } else {\n      return color === \"yellow\" ? \"yellow\" : \"black\";\n    }\n  }\n\n  eyeColors () {\n    let time = new Date().getSeconds();\n    if (time < 5 || (time > 10 && time < 15) || (time > 20 && time < 25) || (time > 30 && time < 35) || (time > 40 && time < 45) || (time > 50 && time < 55)) {\n      return \"yellow\";\n    } else {\n      return \"black\";\n    }\n  }\n\n  draw (ctx) {\n    let centerX = this.placement.width + this.width*0.5;\n    let centerY = this.placement.height + this.height * 0.5;\n\n    this.mod = this.mod || 5;\n    this.modSlowDown = this.modSlowDown || 0;\n    this.modDirection = this.modDirection || 1;\n\n    this.modSlowDown += 1;\n    if (this.modSlowDown % 10 === 0) {\n      if (this.mod === 5) {\n        this.modDirection = -1;\n      } else if (this.mod === - 5) {\n        this.modDirection = 1;\n      }\n      this.mod += this.modDirection;\n    }\n\n    // Spherical Land\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, this.size * 100, 0,  3 * Math.PI, false);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = '#003300';\n    ctx.stroke();\n\n    if (this.building === 'cave') {\n      let xPos = centerX - this.width * 0.01;\n      let yPos = centerY - this.height * 0.05;\n      //cave ground\n      ctx.beginPath();\n      ctx.ellipse(xPos, yPos, 40, 20, Math.PI/180, 0, 3 * Math.PI);\n      ctx.lineWidth = 5;\n      ctx.stroke();\n      ctx.fillStyle = 'tan';\n      ctx.fill();\n      //cave arch\n      ctx.beginPath();\n      ctx.arc(xPos, yPos, 30, 0, Math.PI, 1);\n      ctx.bezierCurveTo(xPos - 15,yPos + 10,xPos + 15,yPos + 10,xPos + 30,yPos);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = \"grey\";\n      ctx.fill();\n      //cave mouth\n      ctx.beginPath();\n      ctx.moveTo(xPos - 10,yPos + 5);\n      ctx.bezierCurveTo(xPos - 5,yPos - 20,xPos + 5,yPos - 20,xPos + 10,yPos + 5);\n      ctx.bezierCurveTo(xPos,yPos + 6,xPos - 5,yPos + 6,xPos - 10,yPos + 5);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = \"black\";\n      ctx.fill();\n\n      //eyes\n      ctx.beginPath();\n      ctx.moveTo(xPos - 6,yPos);\n      ctx.bezierCurveTo(xPos - 4,yPos - 1,xPos - 3,yPos - 1,xPos - 2,yPos);\n      ctx.bezierCurveTo(xPos - 3,yPos + 1,xPos - 4,yPos + 1,xPos - 6,yPos);\n      ctx.closePath();\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = this.eyeColors();\n      ctx.stroke();\n      ctx.fillStyle = this.eyeColors();\n      ctx.fill();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos,yPos);\n      ctx.bezierCurveTo(xPos + 2,yPos - 1,xPos + 3,yPos - 1,xPos + 4,yPos);\n      ctx.bezierCurveTo(xPos + 3,yPos + 1,xPos + 2,yPos + 1,xPos,yPos);\n      ctx.closePath();\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = this.eyeColors();\n      ctx.stroke();\n      ctx.fillStyle = this.eyeColors();\n      ctx.fill();\n    }\n\n    //Hut\n    if (this.building === 'hut') {\n      let xPos = centerX - this.width * 0.05;\n      let yPos = centerY - this.height * 0.05;\n\n      //Base\n      ctx.beginPath();\n      ctx.moveTo(xPos, yPos);  //x = 108 y == 105\n      ctx.lineTo(xPos,yPos + 23);\n      ctx.bezierCurveTo(xPos + 17, yPos + 28, xPos + 19, yPos + 28, xPos + 42, yPos + 23);\n      ctx.lineTo(xPos + 42,yPos);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = 'tan';\n      ctx.fill();\n\n      //top\n      ctx.beginPath();\n      ctx.moveTo(xPos - 8, yPos - 5);\n      ctx.bezierCurveTo(xPos + 2, yPos - 15, xPos + 12, yPos - 25, xPos + 22, yPos - 30);\n      ctx.bezierCurveTo(xPos + 32, yPos - 20, xPos + 42, yPos - 10, xPos + 52, yPos - 5);\n      ctx.bezierCurveTo(xPos + 27, yPos, xPos + 8, yPos, xPos - 8, yPos - 5);\n      ctx.closePath();\n      ctx.lineJoin = \"miter\";\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = 'tan';\n      ctx.fill();\n\n      //door\n      ctx.beginPath();\n      ctx.moveTo(xPos + 16,yPos + 25);\n      ctx.bezierCurveTo(xPos + 16,yPos + 27,xPos + 24,yPos + 25,xPos + 22,yPos + 25);\n      ctx.bezierCurveTo(xPos + 24,yPos + 5,xPos + 16,yPos + 5,xPos + 16,yPos + 25);\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = 'black';\n      ctx.fill();\n\n      //fire log\n      ctx.beginPath();\n      ctx.moveTo(xPos + 27,yPos + 39);\n      ctx.lineTo(xPos + 38,yPos + 32);\n      ctx.lineTo(xPos + 36,yPos + 30);\n      ctx.lineTo(xPos + 25,yPos + 37);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = 'brown';\n      ctx.fill();\n\n      //fire log\n      ctx.beginPath();\n      ctx.moveTo(xPos + 27,yPos + 30);\n      ctx.lineTo(xPos + 38,yPos + 37);\n      ctx.lineTo(xPos + 36,yPos + 39);\n      ctx.lineTo(xPos + 25,yPos + 32);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = 'brown';\n      ctx.fill();\n\n      //fire\n\n      let fireTop = this.mod / 2;\n      let concavenessLeft = 1/this.mod;\n      let concavenessRight = this.mod / 4;\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 27,yPos + 32);\n      ctx.lineTo(xPos + 34,yPos + 32);\n      ctx.bezierCurveTo(xPos + 32 + concavenessRight,yPos + 30,xPos + 31 + concavenessRight,yPos + 25,xPos + 30 + fireTop,yPos + 22);\n      ctx.bezierCurveTo(xPos + 30 + concavenessLeft, yPos +25,xPos +28 + concavenessLeft, yPos +31,xPos + 28,yPos + 32);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'orange';\n      ctx.fillStyle = 'yellow';\n      ctx.stroke();\n      ctx.fill();\n\n    } else if (this.building === 'castle') {\n\n      let xPos = centerX - this.width * 0.012;\n      let yPos = centerY - this.height * 0.6;\n\n      //moat\n      ctx.beginPath();\n      ctx.ellipse(xPos, yPos + 55, 30, 20, Math.PI/180, 0, 3 * Math.PI);\n      ctx.lineWidth = 5;\n      ctx.stroke();\n      ctx.fillStyle = 'blue';\n      ctx.fill();\n\n      //flag pole\n      ctx.beginPath();\n      ctx.moveTo(xPos,yPos + 25);\n      ctx.lineTo(xPos,yPos); //x = 130 y = 70\n      ctx.lineWidth = 3;\n      ctx.stroke();\n\n      //flag\n      ctx.beginPath();\n      ctx.moveTo(xPos + 1, yPos + 1);\n      ctx.lineTo(xPos - 17, yPos + this.mod);\n      ctx.lineTo(xPos, yPos + 4);\n      ctx.closePath();\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = 'red';\n      ctx.fill();\n\n      //grass\n      ctx.beginPath();\n      ctx.ellipse(xPos - 2, yPos + 57, 23, 13, Math.PI/180, 0, 3 * Math.PI);\n      ctx.stroke();\n      ctx.fillStyle = 'green';\n      ctx.fill();\n\n      //base\n      ctx.beginPath();\n      ctx.moveTo(xPos - 18, yPos + 35);\n      ctx.lineTo(xPos - 18,yPos + 60);\n      ctx.bezierCurveTo(xPos - 5, yPos + 63, xPos + 7, yPos + 63, xPos + 16, yPos + 58);\n      ctx.lineTo(xPos + 18,yPos + 35);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = 'grey';\n      ctx.fill();\n\n      //castle top\n      ctx.beginPath();\n      ctx.moveTo(xPos - 30, yPos + 35);\n      ctx.lineTo(xPos - 32, yPos + 20);\n      ctx.lineTo(xPos - 25,yPos + 20);\n      ctx.lineTo(xPos - 25,yPos + 25);\n      ctx.lineTo(xPos - 18,yPos + 25);\n      ctx.lineTo(xPos - 18,yPos + 20);\n      ctx.lineTo(xPos - 11,yPos + 20);\n      ctx.lineTo(xPos - 11,yPos + 25);\n      ctx.lineTo(xPos - 4,yPos + 25);\n      ctx.lineTo(xPos - 4,yPos + 20);\n      ctx.lineTo(xPos + 3,yPos + 20);\n      ctx.lineTo(xPos + 3,yPos + 25);\n      ctx.lineTo(xPos + 10,yPos + 25);\n      ctx.lineTo(xPos + 10,yPos + 20);\n      ctx.lineTo(xPos + 17,yPos + 20);\n      ctx.lineTo(xPos + 17,yPos + 25);\n      ctx.lineTo(xPos + 24,yPos + 25);\n      ctx.lineTo(xPos + 24,yPos + 20);\n      ctx.lineTo(xPos + 31,yPos + 20);\n      ctx.lineTo(xPos + 29,yPos + 35);\n      ctx.bezierCurveTo(xPos + 10,yPos + 38,xPos - 10,yPos + 37,xPos - 30,yPos + 35);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = 'grey';\n      ctx.fill();\n\n      //door\n      ctx.beginPath();\n      ctx.moveTo(xPos - 6,yPos + 60);\n      ctx.bezierCurveTo(xPos - 6,yPos + 62,xPos + 2,yPos + 60,xPos + 4,yPos + 60);\n      ctx.bezierCurveTo(xPos + 2,yPos + 40,xPos - 6,yPos + 40,xPos - 6,yPos + 60);\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = 'black';\n      ctx.fill();\n\n      //bridge\n      ctx.beginPath();\n      ctx.moveTo(xPos - 6,yPos + 60);\n      ctx.bezierCurveTo(xPos - 6,yPos + 58,xPos + 2,yPos + 58,xPos + 4,yPos + 60);\n      ctx.lineTo(xPos - 1,yPos + 75);\n      ctx.bezierCurveTo(xPos - 3,yPos + 77,xPos - 8,yPos + 77,xPos - 10,yPos + 75);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = 'brown';\n      ctx.fill();\n    } else if (this.building === 'tower') {\n\n      let xPos = centerX - this.width * 0.095;\n      let yPos = centerY - this.height * 0.65;\n      this.towerMod = -1;\n\n      //tower top\n      ctx.beginPath();\n      ctx.moveTo(xPos, yPos);\n      ctx.lineTo(xPos + 30, yPos + 15);\n      ctx.lineTo(xPos + 55, yPos);\n      ctx.lineTo(xPos + 25,yPos - 10);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.lineJoin = \"miter\";\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = 'grey';\n      ctx.fill();\n\n      //tower left side\n      ctx.beginPath();\n      ctx.moveTo(xPos + 30, yPos + 15);\n      ctx.lineTo(xPos + 30, yPos + 65);\n      ctx.lineTo(xPos + 15, yPos + 50);\n      ctx.lineTo(xPos - 1,yPos + 3);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = 'grey';\n      ctx.fill();\n\n      //tower right side\n      ctx.beginPath();\n      ctx.moveTo(xPos + 33, yPos + 65);\n      ctx.lineTo(xPos + 45, yPos + 50);\n      ctx.lineTo(xPos + 56,yPos + 3);\n      ctx.lineTo(xPos + 30,yPos + 15);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = 'grey';\n      ctx.fill();\n\n      //tower road (right)\n      ctx.beginPath();\n      ctx.moveTo(xPos + 28, yPos + 76);\n      ctx.lineTo(xPos + 53, yPos + 50);\n      ctx.lineWidth = 15;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = 'grey';\n      ctx.fill();\n\n      //tower road (left)\n      ctx.beginPath();\n      ctx.moveTo(xPos + 36, yPos + 77);\n      ctx.lineTo(xPos + 7, yPos + 50);\n      ctx.lineWidth = 15;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.fillStyle = 'grey';\n      ctx.fill();\n\n      //tower road dividers\n      ctx.beginPath();\n      ctx.moveTo(xPos + 39, yPos + 71);\n      ctx.lineTo(xPos + 45,yPos + 66);\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = 'white';\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 47, yPos + 63);\n      ctx.lineTo(xPos + 53,yPos + 58);\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = 'white';\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 32, yPos + 77);\n      ctx.lineTo(xPos + 38,yPos + 72);\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = 'white';\n      ctx.stroke();\n\n      //tower cars\n      ctx.beginPath();\n      ctx.moveTo(xPos + 43, yPos + 58);\n      ctx.lineTo(xPos + 49,yPos + 53);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = 'yellow';\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 34, yPos + 66);\n      ctx.lineTo(xPos + 40,yPos + 61);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = 'yellow';\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 24, yPos + 64);\n      ctx.lineTo(xPos + 17,yPos + 59);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = 'yellow';\n      ctx.stroke();\n\n      //tower road dividers left\n      ctx.beginPath();\n      ctx.moveTo(xPos + 13, yPos + 62);\n      ctx.lineTo(xPos + 7,yPos + 57);\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = 'white';\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 23, yPos + 71);\n      ctx.lineTo(xPos + 16,yPos + 66);\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = 'white';\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 32, yPos + 79);\n      ctx.lineTo(xPos + 25,yPos + 74);\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = 'white';\n      ctx.stroke();\n\n      //tower car\n      ctx.beginPath();\n      ctx.moveTo(xPos + 25, yPos + 75);\n      ctx.lineTo(xPos + 31,yPos + 70);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = 'red';\n      ctx.stroke();\n\n      //tower lights\n      ctx.beginPath();\n      ctx.moveTo(xPos + 36, yPos + 53);\n      ctx.lineTo(xPos + 36,yPos + 48);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(40, \"yellow\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 24, yPos + 43);\n      ctx.lineTo(xPos + 24,yPos + 38);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(50, \"yellow\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 23, yPos + 26);\n      ctx.lineTo(xPos + 23,yPos + 32);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(40, \"yellow\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 22, yPos + 20);\n      ctx.lineTo(xPos + 22,yPos + 14);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(70, \"black\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 17, yPos + 43);\n      ctx.lineTo(xPos + 17,yPos + 48);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(40, \"black\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 15, yPos + 38);\n      ctx.lineTo(xPos + 14,yPos + 32);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(30, \"black\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 13, yPos + 28);\n      ctx.lineTo(xPos + 12,yPos + 22);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(50, \"yellow\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 11, yPos + 18);\n      ctx.lineTo(xPos + 10,yPos + 12);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(40, \"black\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 25, yPos + 49);\n      ctx.lineTo(xPos + 25, yPos + 54);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(60, \"black\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 37, yPos + 43);\n      ctx.lineTo(xPos + 37,yPos + 38);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(10, \"black\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 37, yPos + 26);\n      ctx.lineTo(xPos + 37,yPos + 32);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(30, \"black\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 37, yPos + 21);\n      ctx.lineTo(xPos + 37,yPos + 15);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(40, \"yellow\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 43, yPos + 44);\n      ctx.lineTo(xPos + 43,yPos + 49);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(70, \"black\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 44, yPos + 40);\n      ctx.lineTo(xPos + 44,yPos + 35);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(30, \"yellow\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 46, yPos + 25);\n      ctx.lineTo(xPos + 45,yPos + 31);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(20, \"black\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 47, yPos + 19);\n      ctx.lineTo(xPos + 48,yPos + 12);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = this.randomToggle(60, \"yellow\");\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(xPos + 27, yPos + 2);\n      ctx.lineTo(xPos + 26,yPos - 25);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = \"black\";\n      ctx.stroke();\n    }\n  }\n}\n\n\n\nmodule.exports = Country;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/views/country.js\n ** module id = 4\n ** module chunks = 0\n **/","const MovingObject = require('./moving_object.js');\n\nconst DEFAULTS = {\n  vel: [-1,0],\n  width: 720,\n  height: 720,\n  color: \"#fff\"\n};\n\nclass Wave extends MovingObject  {\n  constructor (options = {}) {\n    let settings = Object.assign(DEFAULTS,options);\n    super(settings);\n    this.setPosition(settings.position, settings.width, settings.height);\n  }\n\n  setPosition (pos, width, height) {\n    this.mod = this.mod || 5;\n    this.modSlowDown = this.modSlowDown || 0;\n    this.modDirection = this.modDirection || 1;\n    this.pos = [width * pos/20 * 0.7, Math.random()*0.9*height + 0.1*height];\n  }\n\n  move () {\n    this.modSlowDown += 1;\n    if (this.modSlowDown % 5 === 0) {\n      if (this.mod === 5) {\n        this.modDirection = -1;\n      } else if (this.mod === - 5) {\n        this.modDirection = 1;\n      }\n      this.mod += this.modDirection;\n    }\n    this.pos = [this.pos[0] + this.vel[0], this.pos[1] + this.vel[1]];\n    if (this.game.isOutOfBounds(this.pos)) {\n      this.pos = this.game.wrap(this.pos);\n    }\n  }\n\n  draw (ctx) {\n    let x = this.pos[0];\n    let y = this.pos[1];\n    // Wave\n    ctx.beginPath();\n    ctx.moveTo(x, y - this.mod);\n    ctx.lineTo(x + 10, y + this.mod);\n    ctx.lineTo(x + 20, y - this.mod);\n    ctx.lineTo(x + 30, y + this.mod);\n    ctx.lineTo(x + 40, y - this.mod);\n    ctx.lineTo(x + 50, y + this.mod);\n    ctx.lineTo(x + 60, y - this.mod);\n    ctx.lineWidth=\"3\";\n    ctx.strokeStyle=\"#fff\";\n    ctx.stroke();\n\n  }\n\n}\n\n\n\nmodule.exports = Wave;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/views/wave.js\n ** module id = 5\n ** module chunks = 0\n **/","const Util = require('./utils.js');\n\nclass MovingObject {\n  constructor(options) {\n    this.width = options.width;\n    this.height = options.height;\n    this.color = options.color;\n    this.position = options.position;\n    this.vel = options.vel;\n    this.game = options.game;\n  }\n}\n\nmodule.exports = MovingObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/views/moving_object.js\n ** module id = 6\n ** module chunks = 0\n **/","const MovingObject = require('./moving_object.js');\n\nconst DEFAULTS = {\n  color: \"brown\",\n  width: 720,\n  height: 720\n};\n\nclass Boat extends MovingObject  {\n  constructor (options = {}) {\n    let settings = Object.assign(DEFAULTS,options);\n    super(settings);\n    this.setPosition(settings.position, settings.width, settings.height, settings.destination);\n    this.firing = false;\n    this.purpose = settings.purpose;\n    this.country = settings.countries[settings.destination];\n    this.stopGap = this.country.view.size * 100;\n  }\n\n  setPosition (pos, width, height, destination) {\n    if (pos === \"top-left\") {\n      this.yPos = height * 0.32;\n      this.xPos = width * 0.14;\n    } else if (pos === \"bottom-left\") {\n      this.yPos = height * 0.78;\n      this.xPos = width * 0.14;\n    } else if (pos === \"top-right\") {\n      this.yPos = height * 0.32;\n      this.xPos = width * 0.52;\n    } else if (pos === \"bottom-right\") {\n      this.yPos = height * 0.78;\n      this.xPos = width * 0.52;\n    }\n    this.setDirection(pos, width, height, destination);\n  }\n\n  setDirection (pos, width, height, destination) {\n    this.dir = (destination === \"top-right\" || destination === \"bottom-right\") ? -1 : 1;\n    if (destination === \"top-left\") {\n      this.yDir = height * 0.32;\n      this.xDir = width * 0.12;\n      if (pos === \"offMap\") {\n        this.xPos = 0.01;\n        this.yPos = 0.01;\n      }\n    } else if (destination === \"bottom-left\") {\n      this.yDir = height * 0.78;\n      this.xDir = width * 0.14;\n      if (pos === \"offMap\") {\n        this.yPos = height;\n        this.xPos = 0.01;\n      }\n    } else if (destination === \"top-right\") {\n      this.yDir = height * 0.32;\n      this.xDir = width * 0.55;\n      if (pos === \"offMap\") {\n        this.yPos = height * 0;\n        this.xPos = width * 0.7;\n      }\n    } else if (destination === \"bottom-right\") {\n      this.yDir = height * 0.8;\n      this.xDir = width * 0.53;\n      if (pos === \"offMap\") {\n        this.yPos = height;\n        this.xPos = width * 0.7;\n      }\n    }\n  }\n\n  move () {\n    let xLength = (this.xDir - this.xPos);\n    let yLength = (this.yDir - this.yPos);\n    let distance = Math.sqrt(Math.pow(xLength,2) + Math.pow(yLength,2));\n    if (distance < this.stopGap && this.purpose === \"war\") {\n      this.fireCannons();\n      return;\n    } else if (distance < 10 && this.purpose === \"establish\") {\n      this.game.remove(this);\n      this.game.establish(this.country);\n    }\n    let slope = xLength === 0 ? 1 : Math.abs(yLength) / Math.abs(xLength);\n\n    this.xPos += this.xDir === this.xPos ? 0 : xLength/Math.abs(xLength);\n\n    this.yPos += this.yDir === this.yPos ? 0 : slope * yLength/Math.abs(yLength);\n  }\n\n  fireCannons () {\n    this.time = new Date();\n    this.firing = true;\n    this.country.view.takeFire();\n  }\n\n  draw (ctx) {\n\n    //Mast\n    ctx.beginPath();\n    ctx.moveTo(this.xPos, this.yPos);\n    ctx.lineTo(this.xPos, this.yPos - 25);\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'black';\n    ctx.stroke();\n\n    //Frame\n    ctx.beginPath();\n    ctx.moveTo(this.xPos - 50, this.yPos - 30);\n    ctx.bezierCurveTo(this.xPos, this.yPos, this.xPos, this.yPos, this.xPos + 50, this.yPos - 30);\n    ctx.lineTo(this.xPos + 30, this.yPos);\n    ctx.lineTo(this.xPos - 30, this.yPos);\n    ctx.closePath();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'black';\n    ctx.stroke();\n    ctx.lineJoin = \"miter\";\n    ctx.fillStyle = 'brown';\n    ctx.fill();\n\n    //Sail\n    ctx.beginPath();\n    ctx.moveTo(this.xPos + (20 * this.dir), this.yPos - 30);\n    ctx.bezierCurveTo(this.xPos + (30 * this.dir), this.yPos - 35, this.xPos + (30 * this.dir), this.yPos - 45, this.xPos + (20 * this.dir), this.yPos - 50);\n    ctx.lineTo(this.xPos - (20 * this.dir), this.yPos - 50);\n    ctx.bezierCurveTo(this.xPos - (10 * this.dir), this.yPos - 45, this.xPos - (10 * this.dir), this.yPos - 25, this.xPos - (20 * this.dir), this.yPos - 20);\n    ctx.closePath();\n    ctx.lineJoin = \"miter\";\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'black';\n    ctx.stroke();\n    ctx.fillStyle = 'white';\n    ctx.fill();\n\n    //Cannons\n    ctx.beginPath();\n    ctx.moveTo(this.xPos - 25, this.yPos - 1);\n    ctx.lineTo(this.xPos - 25, this.yPos - 5);\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'black';\n    ctx.stroke();\n\n    //Middle cannon\n    ctx.beginPath();\n    ctx.moveTo(this.xPos, this.yPos - 1);\n    ctx.lineTo(this.xPos, this.yPos - 5);\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'black';\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.moveTo(this.xPos + 25, this.yPos - 1);\n    ctx.lineTo(this.xPos + 25, this.yPos - 5);\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'black';\n    ctx.stroke();\n\n    //Cannon fire\n\n    if (this.firing && this.purpose === \"war\") {\n      if (this.time.getMilliseconds() < 200) {\n        ctx.beginPath();\n        ctx.moveTo(this.xPos - 30, this.yPos + 5);\n        ctx.lineTo(this.xPos - 25, this.yPos - 1);\n        ctx.lineTo(this.xPos - 20, this.yPos + 5);\n        ctx.closePath();\n        ctx.lineJoin = 'miter';\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = 'orange';\n        ctx.stroke();\n        ctx.fillStyle = 'orange';\n        ctx.fill();\n      }\n\n\n      //Middle Cannon fire\n      if (this.time.getMilliseconds() > 400 && this.time.getMilliseconds() < 600) {\n        ctx.beginPath();\n        ctx.moveTo(this.xPos - 5, this.yPos + 5);\n        ctx.lineTo(this.xPos, this.yPos - 1);\n        ctx.lineTo(this.xPos + 5, this.yPos + 5);\n        ctx.closePath();\n        ctx.lineJoin = 'miter';\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = 'orange';\n        ctx.stroke();\n        ctx.fillStyle = 'orange';\n        ctx.fill();\n      }\n\n      if (this.time.getMilliseconds() > 800) {\n        ctx.beginPath();\n        ctx.moveTo(this.xPos + 20, this.yPos + 5);\n        ctx.lineTo(this.xPos + 25, this.yPos - 1);\n        ctx.lineTo(this.xPos + 30, this.yPos + 5);\n        ctx.closePath();\n        ctx.lineJoin = 'miter';\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = 'orange';\n        ctx.stroke();\n        ctx.fillStyle = 'orange';\n        ctx.fill();\n      }\n    }\n  }\n}\n\n\n\nmodule.exports = Boat;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/views/boat.js\n ** module id = 8\n ** module chunks = 0\n **/","const Utils = require('./utils.js');\n\nconst DEFAULTS = {\n  color: \"#fff\",\n  width: 1200,\n  height: 800\n};\n\nclass InfoScreen {\n  constructor (options = {}) {\n    let settings = Object.assign(DEFAULTS,options);\n    this.width = settings.width;\n    this.height = settings.height;\n    this.color = settings.color;\n    this.kingColor = \"red\";\n    this.game = settings.game;\n    this.revealed = true; //for testing\n    this.xPos = this.width * 0.7 + 2;\n    this.kingPos = {\n      action: \"\",\n      leftArm: [0,0],\n      rightArm: [0,0],\n      leftLeg: [0,0],\n      rightLeg: [0,0],\n      pole: [0,0],\n      body: [0,0]\n    };\n    this.agePos = {\n      10: [0,0],\n      20: [0,0],\n      30: [0,0],\n      50: [0,0]\n    };\n    this.text = {\n      header: \"Age 1\",\n      beginning: true,\n      startGame: false,\n      instructions: false,\n      betweenAges: false,\n      inGame: false,\n      council: false,\n      colors: true,\n      showAges: false,\n      ageMove: false,\n      ageSelect: \"20\",\n      ageSelected: false,\n      begin: false,\n      decision: false,\n      kingReveal: true,\n      showAge: false,\n      betweenAgeMessage: [\"Before you begin, you must pick a specialty for\"+\n      \" your kingdom:\", this.currentBetweenAgeMessage],\n      firstContent: \"Thank you for playing Shapes of War. You will play as \"+\n      \"the ruler of the Circle Kingdom. Please pick a color...\",\n      colorChoices: [\"blue\", \"green\", \"yellow\", \"red\"],\n      currentBetweenAgeMessage: [\n        \"Strength will mostly affect your subjects' ability to harvest food \"+\n        \"and engage in warfare. Strength is best utilized with large populations.\",\n        \"Intelligence addresses future needs over more pressing issues. Disease \"+\n        \"control, technology advancement, and efficient management of food are \"+\n        \"all affected by intelligence.\", \"The deceitful leader doesn't worry \"+\n        \"about internal prosperity. Winning is measured against others, and through \"+\n        \"devious schemes, deceitful leaders excel in comparison by bringing \"+\n        \"down those around them.\", \"A jack of all trades, but master of none. \"+\n        \"Mediocrity is to some what general excellence is to others. Have no \"+\n        \"weaknesses and only you can hold yourself back.\"\n      ],\n      currentBetweenAgeMessageSelected: 0,\n      positiveChoice: \"\",\n      negativeChoice: \"\",\n      population: \"10\",\n      size: \"big\",\n      climate: \"hot\",\n      diseaseRate: \"minimal\",\n      foodStorage: \"plenty\",\n      powerLevel: \"strong\",\n      events: {\n        culled: \"a few\",\n        born: \"a lot\",\n        disease: \"a few\",\n        oldAge: \"a few\",\n        starved: \"a bit\"\n      },\n      avgInt: 100,\n      avgStr: 100,\n      avgHealth: 100\n    };\n  }\n\n  show (options) {\n    this.revealed = true;\n  }\n\n  resetScreens (exceptFor) {\n    this.text.beginning = exceptFor === \"beginning\" ? true : false;\n    this.text.council = exceptFor === \"council\" ? true : false;\n    this.text.instructions = exceptFor === \"instructions\" ? true : false;\n    this.text.betweenAges = exceptFor === \"betweenAges\" ? true : false;\n    this.text.decision = exceptFor === \"decision\" ? true : false;\n    this.text.startGame = exceptFor === \"startGame\" ? true : false;\n  }\n\n  bringUpCouncil () {\n    this.resetScreens(\"council\");\n    this.kingReveal = true;\n  }\n\n  goBetweenAges () {\n    this.resetScreens(\"betweenAges\");\n    this.text.kingReveal = true;\n  }\n\n  hide () {\n    this.text.showAge = false;\n    this.revealed = false;\n    this.kingReveal = false;\n    this.xPos = this.width * 0.7 + 2;\n  }\n\n  selectKingColor (color) {\n    this.kingColor = color;\n  }\n\n  selectAge (age) {\n    this.text.ageSelect = age;\n  }\n\n  resumeGame () {\n    this.hide();\n    this.resetScreens();\n  }\n\n  hideIfAllowed () {\n    if (this.council) {\n      this.hide();\n    }\n  }\n\n  setAge () {\n    this.text.ageSelected = true;\n    this.text.showAges = false;\n    this.text.showAge = true;\n    this.text.ageMove = true;\n\n    this.token = window.setTimeout(()=> {\n      this.offerDecision();\n      this.text.firstContent = \"Ahh, brave. Brave, indeed. Quite brave. Are you \" +\n      \"ready to begin your journey, or would you like me to remind you how \" +\n      \"to lead a kingdom?\";\n      this.text.positiveChoice = \"'Yes, I am ready to conquer the Polygons. \"+\n      \"They will be nothing but lines and points after I'm finished \"+\n      \"with them!'\";\n      this.text.negativeChoice = \"'Of course I bloody know how to run a \"+\n      \"kingdom!.. but... I want you to prove to me that you do, as well.'\";\n    },1250);\n\n    this.ageXDis = this.width * (0.22 + ((parseInt(this.text.ageSelect ===\n      \"50\" ? \"40\" : this.text.ageSelect) / 10) * 0.08)) - 135;\n    this.ageYDis = this.height / 3 - this.height * 0.1 - 90;\n\n    if (this.text.ageSelect === \"10\" && Math.abs(this.agePos[10][0]) <\n      this.ageXDis) {\n      this.agePos[10][0] -= 4;\n      if (Math.abs(Math.abs(this.agePos[10][1])) < this.ageYDis) {\n        this.agePos[10][1] -= 1;\n      }\n    } else if (this.text.ageSelect === \"20\" && Math.abs(this.agePos[20][0]) <\n      this.ageXDis) {\n        this.agePos[20][0] -= 5;\n        if (Math.abs(Math.abs(this.agePos[20][1])) < this.ageYDis) {\n          this.agePos[20][1] -= 1;\n        }\n    } else if (this.text.ageSelect === \"30\" && Math.abs(this.agePos[30][0]) <\n      this.ageXDis) {\n        this.agePos[30][0] -= 6;\n        if (Math.abs(Math.abs(this.agePos[30][1])) < this.ageYDis) {\n          this.agePos[30][1] -= 1;\n        }\n    } else if (this.text.ageSelect === \"50\" && Math.abs(this.agePos[50][0]) <\n      this.ageXDis) {\n        this.agePos[50][0] -= 7;\n        if (Math.abs(Math.abs(this.agePos[50][1])) < this.ageYDis) {\n          this.agePos[50][1] -= 1;\n        }\n    } else {\n      this.text.ageMove = false;\n    }\n  }\n\n  setColor () {\n    window.setTimeout(()=>{\n      this.text.colors = false;\n      this.text.firstContent = \"Thank you, my liege. I have a good feeling \"+\n      \"about you. Now, how many ages would you like to play?\";\n      this.showAges();\n    },1500);\n    this.kingPos.action = \"jumpDown\";\n  }\n\n  showAges () {\n    this.text.showAge = true;\n    this.text.showAges = true;\n  }\n\n  selectChoice(choice) {\n    if (choice === \"positive-beginning\") {\n      this.game.setStage(\"betweenAges\");\n    } else if (choice === \"negative-beginning\") {\n      this.game.setStage(\"instructions\");\n      this.giveInstructions();\n    }\n  }\n\n  giveInstructions () {\n    this.resetScreens('instructions');\n  }\n\n  offerDecision () {\n    this.resetScreens(\"decision\");\n  }\n\n  startGame () {\n    this.hide();\n    this.resetScreens();\n  }\n\n  kingJumpDown () {\n    //pushing up\n    if (this.kingPos.body[0] >= -8 && this.kingPos.body[1] <= 0) {\n      this.kingPos.body[0] -= 1;\n      this.kingPos.body[1] -= 1;\n      this.kingPos.rightArm[0] -= 1;\n      this.kingPos.rightArm[1] -= 1;\n      this.kingPos.pole[0] -= 1;\n      this.kingPos.pole[1] -= 1;\n      //falling down\n    } else if (this.kingPos.body[0] > -15 && this.kingPos.body[1] <= 0) {\n        this.kingPos.body[0] -= 1;\n        this.kingPos.body[1] += 1;\n        this.kingPos.leftArm[0] -= 3;\n        this.kingPos.pole[0] -= 1;\n        this.kingPos.rightArm[0] -= 1;\n        this.kingPos.rightArm[1] += 1;\n        this.kingPos.pole[1] += 1;\n        this.kingPos.leftLeg[0] -= 1;\n        this.kingPos.leftLeg[1] += 1;\n        this.kingPos.rightLeg[0] -= 1;\n        this.kingPos.rightLeg[1] += 1;\n        //falling down straight\n\n    } else if (this.kingPos.body[0] === -15 && this.kingPos.body[1] < 170) {\n        this.kingPos.body[1] += 3;\n        if (this.kingPos.body[1] > 40) {\n          this.kingPos.leftArm[1] += 3;\n        }\n        this.kingPos.rightArm[1] += 3;\n        this.kingPos.pole[1] += 3;\n        this.kingPos.leftLeg[1] += 3;\n        this.kingPos.rightLeg[1] += 3;\n        //pumping arm\n\n    } else if (this.kingPos.body[1] > 167 &&\n      this.kingPos.rightArm[0] > -25 &&\n      this.kingPos.rightArm[1] < 185) {\n        this.kingPos.rightArm[0] -= 1;\n        this.kingPos.rightArm[1] += 2;\n        if (this.kingPos.leftArm[1] < 170) {\n          this.kingPos.leftArm[1] += 3;\n        }\n        this.kingPos.pole[0] -= 1;\n        this.kingPos.pole[1] += 2;\n        if (this.kingPos.rightLeg[1] < 210) {\n          this.kingPos.rightLeg[1] += 1;\n        }\n        //raising arm\n\n      } else if (this.kingPos.leftArm[1] < 170) {\n        this.kingPos.leftArm[1] += 3;\n        if (this.kingPos.rightLeg[1] < 210) {\n          this.kingPos.rightLeg[1] += 1;\n        }\n      } else if (this.kingPos.rightArm[0] < -14 &&\n        this.kingPos.rightArm[1] > 120) {\n        this.kingPos.rightArm[0] -= 1;\n        this.kingPos.rightArm[1] -= 5;\n        this.kingPos.pole[0] -= 1;\n        this.kingPos.pole[1] -= 5;\n      }\n\n  }\n\n  setSelectedTextDescription (type,selected) {\n    if (type === \"selectPerk\"){\n      this.text.currentBetweenAgeMessageSelected = selected;\n    }\n  }\n\n  draw (ctx) {\n    let yPos = this.height * 0.10 + 2;\n    if (this.revealed && this.xPos > 0) {\n      this.xPos -= 10;\n    }\n    if (this.text.beginning) {\n      this.xPos = 0;\n    }\n\n    if (this.kingPos.action === \"jumpDown\") {\n      this.kingJumpDown();\n    }\n\n    if (this.text.ageMove) {\n      this.setAge();\n    }\n\n    ctx.beginPath();\n    ctx.rect(this.xPos, yPos, this.width, this.height * 0.9 - 2);\n    ctx.fillStyle = \"lightgrey\";\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'black';\n    ctx.stroke();\n    ctx.fill();\n\n    if (this.text.kingReveal) {\n      //throne back\n      ctx.beginPath();\n      ctx.moveTo(this.xPos + 50,yPos + 18);\n      ctx.lineTo(this.xPos + 55,yPos + 248);\n      ctx.lineTo(this.xPos + 215,yPos + 248);\n      ctx.lineTo(this.xPos + 220,yPos + 18);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"#672c00\";\n      ctx.fill();\n      ctx.stroke();\n\n      //throne seat\n      ctx.beginPath();\n      ctx.moveTo(this.xPos + 55,yPos + 248);\n      ctx.lineTo(this.xPos + 45,yPos + 268);\n      ctx.lineTo(this.xPos + 225,yPos + 268);\n      ctx.lineTo(this.xPos + 215,yPos + 248);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"#290d0d\";\n      ctx.fill();\n      ctx.stroke();\n\n      //throne base\n      ctx.beginPath();\n      ctx.moveTo(this.xPos + 44,yPos + 270);\n      ctx.lineTo(this.xPos + 44,yPos + 470);\n      ctx.lineTo(this.xPos + 226,yPos + 470);\n      ctx.lineTo(this.xPos + 226,yPos + 270);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"#672c00\";\n      ctx.fill();\n      ctx.stroke();\n\n      //throne arm rests\n      ctx.beginPath();\n      ctx.moveTo(this.xPos + 44,yPos + 268);\n      ctx.lineTo(this.xPos + 44,yPos + 208);\n      ctx.lineTo(this.xPos + 64,yPos + 208);\n      ctx.lineTo(this.xPos + 64,yPos+268);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"brown\";\n      ctx.fill();\n      ctx.stroke();\n\n      //king\n      ctx.beginPath();\n      ctx.arc(\n        this.xPos + 135 + this.kingPos.body[0],\n        yPos + 190 + this.kingPos.body[1], 75,0,2*Math.PI\n      );\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = this.kingColor;\n      ctx.fill();\n      ctx.stroke();\n\n      //eyes\n      ctx.beginPath();\n      ctx.ellipse(\n        this.xPos + 105 + this.kingPos.body[0],\n        yPos + 160 + this.kingPos.body[1],\n        15, 20, -20 * Math.PI/180, 0, 2 * Math.PI\n      );\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"white\";\n      ctx.fill();\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.arc(\n        this.xPos + 107 + this.kingPos.body[0],\n        yPos + 165 + this.kingPos.body[1], 5,0,2*Math.PI\n      );\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"black\";\n      ctx.fill();\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.ellipse(\n        this.xPos + 165 + this.kingPos.body[0],\n        yPos + 160 + this.kingPos.body[1],\n        15, 20, 20 * Math.PI/180, 0, 2 * Math.PI\n      );\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"white\";\n      ctx.fill();\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.arc(\n        this.xPos + 163 + this.kingPos.body[0],\n        yPos + 165 + this.kingPos.body[1], 5,0,2*Math.PI\n      );\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"black\";\n      ctx.fill();\n      ctx.stroke();\n\n      //king arms\n      ctx.beginPath();\n      ctx.moveTo(\n        this.xPos + 68 + this.kingPos.body[0],\n        yPos + 205 + this.kingPos.body[1]\n      );\n      ctx.lineTo(\n        this.xPos + 50 + this.kingPos.leftArm[0],\n        yPos + 205 + this.kingPos.leftArm[1]\n      );\n      ctx.lineTo(\n        this.xPos + 50 + this.kingPos.leftArm[0],\n        yPos + 197 + this.kingPos.leftArm[1]\n      );\n      ctx.lineTo(\n        this.xPos + 68 + this.kingPos.body[0],\n        yPos + 197 + this.kingPos.body[1]\n      );\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = this.kingColor;\n      ctx.fill();\n      ctx.stroke();\n\n      //king hands\n      ctx.beginPath();\n      ctx.ellipse(\n        this.xPos + 50 + this.kingPos.leftArm[0],\n        yPos + 200 + this.kingPos.leftArm[1],\n        10, 15, Math.PI/180, 0, 2 * Math.PI\n      );\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"white\";\n      ctx.fill();\n      ctx.stroke();\n\n      //king armrest\n      ctx.beginPath();\n      ctx.moveTo(this.xPos + 206,yPos + 268);\n      ctx.lineTo(this.xPos + 206,yPos + 208);\n      ctx.lineTo(this.xPos + 226,yPos + 208);\n      ctx.lineTo(this.xPos + 226,yPos+268);\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"brown\";\n      ctx.fill();\n      ctx.stroke();\n\n      //king arms\n      ctx.beginPath();\n      ctx.moveTo(\n        this.xPos + 206 + this.kingPos.body[0],\n        yPos + 205 + this.kingPos.body[1]\n      );\n      ctx.lineTo(\n        this.xPos + 236 + this.kingPos.rightArm[0],\n        yPos + 205 + this.kingPos.rightArm[1]\n      );\n      ctx.lineTo(\n        this.xPos + 236 + this.kingPos.rightArm[0],\n        yPos + 197 + this.kingPos.rightArm[1]\n      );\n      ctx.lineTo(\n        this.xPos + 206 + this.kingPos.body[0],\n        yPos + 197 + this.kingPos.body[1]\n      );\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = this.kingColor;\n      ctx.fill();\n      ctx.stroke();\n\n      //king staff\n      ctx.beginPath();\n      ctx.moveTo(\n        this.xPos + 232 + this.kingPos.pole[0],\n        yPos + 280 + this.kingPos.pole[1]\n      );\n      ctx.lineTo(\n        this.xPos + 232 + this.kingPos.pole[0],\n        yPos + 150 + this.kingPos.pole[1]\n      );\n      ctx.lineTo(\n        this.xPos + 240 + this.kingPos.pole[0],\n        yPos + 150 + this.kingPos.pole[1]\n      );\n      ctx.lineTo(\n        this.xPos + 240 + this.kingPos.pole[0],\n        yPos + 280 + this.kingPos.pole[1]\n      );\n      ctx.closePath();\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"gold\";\n      ctx.fill();\n      ctx.stroke();\n\n      //staff gem\n      ctx.beginPath();\n      ctx.arc(\n        this.xPos + 236 + this.kingPos.pole[0],\n        yPos + 145 + this.kingPos.pole[1],10,0,2*Math.PI\n      );\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = this.kingColor;\n      ctx.fill();\n      ctx.stroke();\n\n      //king hand right\n      ctx.beginPath();\n      ctx.ellipse(\n        this.xPos + 236 + this.kingPos.rightArm[0],\n        yPos + 200 + this.kingPos.rightArm[1],\n        10, 15, Math.PI/180, 0, 2 * Math.PI\n      );\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"white\";\n      ctx.fill();\n      ctx.stroke();\n\n      //king crown\n      ctx.beginPath();\n      ctx.moveTo(\n        this.xPos + 95 + this.kingPos.body[0],yPos + 95 + this.kingPos.body[1]\n      );\n      ctx.lineTo(\n        this.xPos + 100 + this.kingPos.body[0],yPos + 70 + this.kingPos.body[1]\n      );\n      ctx.lineTo(\n        this.xPos + 120 + this.kingPos.body[0],yPos + 95 + this.kingPos.body[1]\n      );\n      ctx.lineTo(\n        this.xPos + 150 + this.kingPos.body[0],yPos + 95 + this.kingPos.body[1]\n      );\n      ctx.lineTo(\n        this.xPos + 170 + this.kingPos.body[0],yPos + 70 + this.kingPos.body[1]\n      );\n      ctx.lineTo(\n        this.xPos + 175 + this.kingPos.body[0],yPos + 95 + this.kingPos.body[1]\n      );\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.lineJoin = \"miter\";\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"#b76b04\";\n      ctx.fill();\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(\n        this.xPos + 100 + this.kingPos.body[0],yPos + 120 + this.kingPos.body[1]\n      );\n      ctx.bezierCurveTo(\n        this.xPos + 123 + this.kingPos.body[0],\n        yPos + 125 + this.kingPos.body[1],\n        this.xPos + 146 + this.kingPos.body[0],\n        yPos + 125 + this.kingPos.body[1],\n        this.xPos + 170 + this.kingPos.body[0],\n        yPos + 120 + this.kingPos.body[1]\n      );\n      ctx.lineTo(\n        this.xPos + 190 + this.kingPos.body[0],yPos + 70 + this.kingPos.body[1]\n      );\n      ctx.lineTo(\n        this.xPos + 165 + this.kingPos.body[0],yPos + 95 + this.kingPos.body[1]\n      );\n      ctx.lineTo(\n        this.xPos + 135 + this.kingPos.body[0],yPos + 70 + this.kingPos.body[1]\n      );\n      ctx.lineTo(\n        this.xPos + 105 + this.kingPos.body[0],yPos + 95 + this.kingPos.body[1]\n      );\n      ctx.lineTo(\n        this.xPos + 80 + this.kingPos.body[0],yPos + 70 + this.kingPos.body[1]\n      );\n      ctx.closePath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"gold\";\n      ctx.fill();\n      ctx.stroke();\n\n      //Ruby on crown\n      ctx.beginPath();\n      ctx.arc(this.xPos + 135 + this.kingPos.body[0],yPos + 100 +\n        this.kingPos.body[1],10,0,2*Math.PI);\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"red\";\n      ctx.fill();\n      ctx.stroke();\n\n      //king shoes\n      ctx.beginPath();\n      ctx.ellipse(this.xPos + 150 + this.kingPos.rightLeg[0], yPos + 300 +\n        this.kingPos.rightLeg[1], 15, 20, 90 * Math.PI/180, 0, 2 * Math.PI);\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"white\";\n      ctx.fill();\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.ellipse(this.xPos + 85 + this.kingPos.leftLeg[0], yPos + 300 +\n        this.kingPos.leftLeg[1], 15, 20, 90 * Math.PI/180, 0, 2 * Math.PI);\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"white\";\n      ctx.fill();\n      ctx.stroke();\n\n      //king legs\n      ctx.beginPath();\n      ctx.moveTo(\n        this.xPos + 95 + this.kingPos.body[0],\n        yPos + 240 + this.kingPos.body[1]\n      );\n      ctx.lineTo(\n        this.xPos + 85 + this.kingPos.leftLeg[0],\n        yPos + 270 + this.kingPos.leftLeg[1]\n      );\n      ctx.lineTo(\n        this.xPos + 85 + this.kingPos.leftLeg[0],\n        yPos + 290 + this.kingPos.leftLeg[1]\n      );\n      ctx.bezierCurveTo(\n        this.xPos + 88 + this.kingPos.leftLeg[0],\n        yPos + 292 + this.kingPos.leftLeg[1],\n        this.xPos + 92 + this.kingPos.leftLeg[0],\n        yPos + 292 + this.kingPos.leftLeg[1],\n        this.xPos + 95 + this.kingPos.leftLeg[0],\n        yPos + 290 + this.kingPos.leftLeg[1]\n      );\n      ctx.lineTo(\n        this.xPos + 95 + this.kingPos.leftLeg[0],\n        yPos + 270 + this.kingPos.leftLeg[1]\n      );\n      ctx.lineTo(\n        this.xPos + 105 + this.kingPos.body[0],\n        yPos + 250 + this.kingPos.body[1]\n      );\n      ctx.lineWidth = 5;\n      ctx.lineJoin = 'round';\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = this.kingColor;\n      ctx.fill();\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(\n        this.xPos + 155 + this.kingPos.body[0],\n        yPos + 240 + this.kingPos.body[1]\n      );\n      ctx.lineTo(\n        this.xPos + 145 + this.kingPos.rightLeg[0],\n        yPos + 270 + this.kingPos.rightLeg[1]\n      );\n      ctx.lineTo(\n        this.xPos + 145 + this.kingPos.rightLeg[0],\n        yPos + 290 + this.kingPos.rightLeg[1]\n      );\n      ctx.bezierCurveTo(\n        this.xPos + 148 + this.kingPos.rightLeg[0],\n        yPos + 292 + this.kingPos.rightLeg[1],\n        this.xPos + 152 + this.kingPos.rightLeg[0],\n        yPos + 292 + this.kingPos.rightLeg[1],\n        this.xPos + 155 + this.kingPos.rightLeg[0],\n        yPos + 290 + this.kingPos.rightLeg[1]\n      );\n      ctx.lineTo(\n        this.xPos + 155 + this.kingPos.rightLeg[0],\n        yPos + 270 + this.kingPos.rightLeg[1]\n      );\n      ctx.lineTo(\n        this.xPos + 165 + this.kingPos.body[0],\n        yPos + 250 + this.kingPos.body[1]\n      );\n      ctx.lineWidth = 5;\n      ctx.lineJoin = 'round';\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = this.kingColor;\n      ctx.fill();\n      ctx.stroke();\n    }\n\n    if (this.text.beginning) {\n      //Intro text - pick a color\n      let linesFirst = Utils.fragmentText(this.text.firstContent,this.width *\n        0.8 - 275 - parseInt(this.height * 0.018,0), ctx);\n      ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = 'black';\n      linesFirst.forEach((line, i) => {\n        ctx.fillText(line, this.xPos + this.width * 0.26 + 250, (i + 1) *\n        parseInt(this.height * 0.025 + 5,0) + this.height * 0.12);\n      });\n\n      //colors\n      if (this.text.colors) {\n        ctx.beginPath();\n        ctx.arc(this.xPos + this.width * 0.3,this.height / 3,this.height *\n          0.05 + 10,0,2*Math.PI);\n        ctx.lineWidth = 5;\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = \"red\";\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.arc(this.xPos + this.width * 0.38,this.height / 3,this.height *\n          0.05 + 10,0,2*Math.PI);\n        ctx.lineWidth = 5;\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = \"lightblue\";\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.arc(this.xPos + this.width * 0.46,this.height / 3,this.height *\n          0.05 + 10,0,2*Math.PI);\n        ctx.lineWidth = 5;\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = \"green\";\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.arc(this.xPos + this.width * 0.54,this.height / 3,this.height *\n          0.05 + 10,0,2*Math.PI);\n        ctx.lineWidth = 5;\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = \"purple\";\n        ctx.fill();\n        ctx.stroke();\n      }\n\n      //submit button\n      if (!this.text.decision) {\n        ctx.beginPath();\n        ctx.rect(this.xPos + this.width * 0.371,this.height * 0.455,this.width *\n          0.1,this.height * 0.05 + 10);\n        ctx.lineWidth = 5;\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = \"limegreen\";\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n        ctx.textAlign = 'center';\n        ctx.fillStyle = 'black';\n        ctx.fillText(\n          \"Decide\", this.xPos + this.width * 0.425,this.height * 0.493\n        );\n      }\n\n    } else if (this.text.instructions) {\n      ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n      ctx.textAlign = 'left';\n      ctx.fillStyle = 'black';\n      ctx.fillText(\n        \"Instructions will go here\", this.xPos +\n        this.width * 0.35,this.height * 0.15\n      );\n    } else if (this.text.betweenAges) {\n      ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = 'black';\n      ctx.fillText(\n        `Age ${this.game.currentAge}`, this.xPos +\n        this.width * 0.42,this.height * 0.15\n      );\n      if (this.game.currentAge === 0) {\n        ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n        ctx.textAlign = 'center';\n        ctx.fillStyle = 'black';\n        ctx.fillText(\n          this.text.betweenAgeMessage[0], this.xPos +\n          this.width * 0.40,this.height * 0.20\n        );\n\n        ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n        ctx.textAlign = 'center';\n        ctx.fillStyle = this.text.currentBetweenAgeMessageSelected === 0 ?\n          'limegreen' : 'black';\n        ctx.fillText(\n          \"Brute Strength\", this.xPos +\n          this.width * 0.3,this.height * 0.35\n        );\n\n        ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n        ctx.textAlign = 'center';\n        ctx.fillStyle = this.text.currentBetweenAgeMessageSelected === 1 ?\n        'limegreen' : 'black';\n        ctx.fillText(\n          \"Raw Intelligence\", this.xPos +\n          this.width * 0.5,this.height * 0.35\n        );\n\n        ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n        ctx.textAlign = 'center';\n        ctx.fillStyle = this.text.currentBetweenAgeMessageSelected === 2 ?\n          'limegreen' : 'black';\n        ctx.fillText(\n          \"Conniving Instinct\", this.xPos +\n          this.width * 0.3,this.height * 0.5\n        );\n\n        ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n        ctx.textAlign = 'center';\n        ctx.fillStyle = this.text.currentBetweenAgeMessageSelected === 3 ?\n          'limegreen' : 'black';\n        ctx.fillText(\n          \"A little bit of everything\", this.xPos +\n          this.width * 0.5,this.height * 0.5\n        );\n\n        let selectedPerkDescription = Utils.fragmentText(\n          this.text.currentBetweenAgeMessage[this.text.currentBetweenAgeMessageSelected],\n          this.width * 0.45 - parseInt(this.height * 0.018,0), ctx\n        );\n\n        ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n        ctx.textAlign = 'center';\n        ctx.fillStyle = 'black';\n        selectedPerkDescription.forEach((line, i) => {\n          ctx.fillText(line, this.xPos + this.width * 0.41, (i + 1) *\n          parseInt(this.height * 0.025 + 5,0) + this.height * 0.65);\n        });\n\n        ctx.beginPath();\n        ctx.rect(this.xPos + this.width * 0.315,this.height * 0.79,this.width *\n          0.2,this.height * 0.05 + 10);\n        ctx.lineWidth = 5;\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = \"limegreen\";\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n        ctx.textAlign = 'center';\n        ctx.fillStyle = 'black';\n        ctx.fillText(\n          \"Ok, let's play already!\", this.xPos + this.width * 0.42,this.height * 0.83\n        );\n      }\n    }\n\n    //ages select\n    if (this.text.showAge) {\n      //10\n      if (this.text.showAges || this.text.ageSelect === \"10\") {\n        ctx.beginPath();\n        ctx.arc(this.xPos + this.width * 0.3 + this.agePos[10][0],\n          this.height / 3 + this.agePos[10][1],this.height * 0.05 +\n          10,0,2*Math.PI);\n        ctx.lineWidth = 5;\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = this.text.ageSelect === \"10\" ? \"turquoise\" : \"grey\";\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.font = `${this.height * 0.025}pt helvetica`;\n        ctx.textAlign = 'center';\n        ctx.fillStyle = \"black\";\n        ctx.fillText(\"10\", this.width * 0.30 + this.agePos[10][0],\n        this.height / 3 + this.agePos[10][1] + this.height * 0.0125);\n      }\n\n      //20\n      if (this.text.showAges || this.text.ageSelect === \"20\") {\n        ctx.beginPath();\n        ctx.arc(this.xPos + this.width * 0.38 + this.agePos[20][0],\n          this.height / 3 + this.agePos[20][1],this.height * 0.05 +\n          10,0,2*Math.PI);\n        ctx.lineWidth = 5;\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = this.text.ageSelect === \"20\" ? \"turquoise\" :  \"grey\";\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.font = `${this.height * 0.02 + 5}pt helvetica`;\n        ctx.textAlign = 'center';\n        ctx.fillStyle = \"black\";\n        ctx.fillText(\"20\", this.width * 0.38 + this.agePos[20][0],\n        this.height / 3 + this.agePos[20][1] + this.height * 0.0125);\n      }\n\n      //30\n      if (this.text.showAges || this.text.ageSelect === \"30\") {\n        ctx.beginPath();\n        ctx.arc(this.xPos + this.width * 0.46 + this.agePos[30][0],\n          this.height / 3 + this.agePos[30][1],this.height * 0.05 +\n          10,0,2*Math.PI);\n        ctx.lineWidth = 5;\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = this.text.ageSelect === \"30\" ? \"turquoise\" :  \"grey\";\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.font = `${this.height * 0.02 + 5}pt helvetica`;\n        ctx.textAlign = 'center';\n        ctx.fillStyle = \"black\";\n        ctx.fillText(\"30\", this.width * 0.46 + this.agePos[30][0],\n        this.height / 3 + this.agePos[30][1] + this.height * 0.0125);\n      }\n\n      //50\n      if (this.text.showAges || this.text.ageSelect === \"50\") {\n        ctx.beginPath();\n        ctx.arc(this.xPos + this.width * 0.54 + this.agePos[50][0],\n          this.height / 3 + this.agePos[50][1],this.height * 0.05 +\n          10,0,2*Math.PI);\n        ctx.lineWidth = 5;\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = this.text.ageSelect === \"50\" ? \"turquoise\" :  \"grey\";\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.font = `${this.height * 0.02 + 5}pt helvetica`;\n        ctx.textAlign = 'center';\n        ctx.fillStyle = \"black\";\n        ctx.fillText(\"50\", this.width * 0.54 + this.agePos[50][0],\n        this.height / 3 + this.agePos[50][1] + this.height * 0.0125);\n      }\n    }\n\n    if (this.text.decision) {\n      //decision\n      //affirmative button\n      ctx.beginPath();\n      ctx.rect(this.xPos + this.width * 0.58,this.height * 0.3,this.width *\n        0.1,this.height * 0.05 + 10);\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"limegreen\";\n      ctx.fill();\n      ctx.stroke();\n\n      //negative button\n      ctx.beginPath();\n      ctx.rect(this.xPos + this.width * 0.58,this.height * 0.455,this.width *\n        0.1,this.height * 0.05 + 10);\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'black';\n      ctx.fillStyle = \"#900606\";\n      ctx.fill();\n      ctx.stroke();\n\n      ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = 'black';\n      ctx.fillText(\n        \"Select\", this.xPos + this.width * 0.63,this.height * 0.34\n      );\n\n      ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = 'black';\n      ctx.fillText(\n        \"Select\", this.xPos + this.width * 0.63,this.height * 0.493\n      );\n\n      let linesFirst = Utils.fragmentText(this.text.firstContent,this.width *\n        0.6 - 275 - parseInt(this.height * 0.018,0), ctx);\n      ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n      ctx.textAlign = 'center';\n      ctx.fillStyle = 'black';\n      linesFirst.forEach((line, i) => {\n        ctx.fillText(line, this.xPos + this.width * 0.26 + 250, (i + 1) *\n        parseInt(this.height * 0.025 + 5,0) + this.height * 0.12);\n      });\n\n      // affirmative response\n      let positiveLines = Utils.fragmentText(this.text.positiveChoice,\n        this.width * 0.4 - parseInt(this.height * 0.018,0), ctx);\n\n      ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n      ctx.textAlign = 'left';\n      ctx.fillStyle = '#3e3838';\n      positiveLines.forEach((line, i) => {\n        ctx.fillText(line, this.xPos + this.width * 0.185, (i + 1) *\n        parseInt(this.height * 0.025 + 5,0) + this.height * 0.30);\n      });\n\n      //negative response\n      let negativeLines = Utils.fragmentText(this.text.negativeChoice,\n        this.width * 0.4 - parseInt(this.height * 0.018,0), ctx);\n\n      ctx.font = `${this.height * 0.012 + 5}pt helvetica`;\n      ctx.textAlign = 'left';\n      ctx.fillStyle = '#3e3838';\n      negativeLines.forEach((line, i) => {\n        ctx.fillText(line, this.xPos + this.width * 0.185, (i + 1) *\n        parseInt(this.height * 0.025 + 5,0) + this.height * 0.455);\n      });\n    }\n\n  }\n\n}\n\nmodule.exports = InfoScreen;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/views/information_screen.js\n ** module id = 9\n ** module chunks = 0\n **/","let Country = require('./countries');\nlet Being = require('./beings');\n\nfunction World (maxSize = 1000) {\n  this.generation = 0;\n  this.cycle = 0;\n  this.maxSize = maxSize;\n\n  let countryNames = [\n    'top-left',\n    'bottom-left',\n    'top-right',\n    'bottom-right'\n  ];\n\n  this.countries = this.establishCountries(countryNames);\n  this.populateCountries(this.countries);\n  this.setupCountries();\n}\n\nWorld.prototype.establishCountries = function (countries) {\n  const allCountries = [];\n  let that = this;\n  countries.forEach(country => {\n    let thisCountry = new Country(country);\n    thisCountry.setSize(this.maxSize / countries.length);\n    thisCountry.setClimate(50,100);\n    thisCountry.setEnvironment(Math.random()*100);\n    allCountries.push(thisCountry);\n  });\n  return allCountries;\n};\n\nWorld.prototype.setupCountries = function () {\n  let that = this;\n  this.countries.forEach(country => country.setupCountry(that));\n};\n\nfunction generateBeings(numBeings, gender, country) {\n  let beings = [];\n  for (var i = 0; i < numBeings; i++) {\n    let int = 90 + Math.random() * 20;\n    let str = 90 + Math.random() * 20;\n    let health = 90 + Math.random() * 20;\n    let races = ['red', 'yellow', 'green', 'blue'];\n    let race = races[Math.floor(Math.random()*4)];\n    beings.push(new Being(gender, int, str, health, country, race, name));\n  }\n  return beings;\n}\n\nWorld.prototype.populateCountries = function () {\n  this.countries.forEach(country => {\n    country.males = (generateBeings(10,'male',country));\n    country.females = (generateBeings(10,'female',country));\n  });\n};\n\nWorld.prototype.cycleUp = function () {\n  this.cycle += 1;\n\n  if (this.cycle === 5) {\n    this.cycle = 0;\n    this.generationUp();\n  }\n  let self = this;\n  this.countries.forEach(country => {\n    country.updateCycle(self);\n  });\n\n};\n\nWorld.prototype.generationUp = function () {\n  let self = this;\n  this.countries.forEach(country => {\n    country.updateGen(self);\n  });\n  this.generation += 1;\n};\n\nWorld.prototype.run = function (generations) {\n  let that = this;\n  while (this.generation < generations) {\n    that.cycleUp();\n  }\n  this.countries.forEach(country => {\n    console.log(country);\n    console.log(`avgStr: ${country.avgStr}; avgInt: ${country.avgInt};\n      avgHealth: ${country.avgHealth}`);\n\n  });\n};\n\nmodule.exports = World;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/game_logic/world.js\n ** module id = 11\n ** module chunks = 0\n **/","let Being = require('./beings');\n\nfunction Country (name) {\n\n  this.name = name;\n\n  this.males = [];\n  this.females = [];\n\n  this.population = 0;\n  this.generation = 0;\n\n  this.size = 0;\n  this.climate = 0;\n  this.diseaseRate = 0;\n  this.farmableLand = 0;\n  this.foodStorage = 0;\n  this.powerLevel = 0;\n  this.warLevel = 0;\n  this.events = {\n    numCulled: 0,\n    numBorn: 0,\n    health: 0,\n    oldAge: 0,\n    starving: 0\n  };\n  this.messages = [];\n\n  this.avgInt = 0;\n  this.avgStr = 0;\n  this.avgHealth = 0;\n}\n\nCountry.prototype.setSize = function (maxSize) {\n  let minSize = maxSize / 2;\n  this.size = minSize + Math.random() * (maxSize - minSize);\n};\n\nCountry.prototype.setClimate = function (minTemp, maxTemp) {\n  this.climate = minTemp + Math.random() * (maxTemp - minTemp);\n};\n\nCountry.prototype.setEnvironment = function (farmableLandPercentage) {\n  //farmableLand function of random percentage of total land and climate\n  this.farmableLand = this.size * (farmableLandPercentage / 100) *\n    (this.climate / 100) * 4;\n};\n\nCountry.prototype.setDisease = function (world) {\n  let worldTemp = 0;\n  world.countries.forEach(country => {\n    worldTemp += country.climate;\n  });\n  let avgTemp = worldTemp / world.countries.length;\n  // Disease rate determined by relative climate to world climate and\n  // population density\n  this.diseaseRate = (this.climate / avgTemp) * 2*(this.population / this.size);\n};\n\nCountry.prototype.generateFood = function () {\n  let population = this.males.concat(this.females);\n  let foodProduced = 0;\n  population.forEach(being => {\n    // amount of food produced based on indiviual being strength, and capped by\n    // farmable land.\n    foodProduced += being.harvestFood();\n  });\n  // Food storage capacity increased by country intelligence\n  let moddedFarmableLand = this.farmableLand * (this.avgInt / 100);\n  this.foodStorage = foodProduced > moddedFarmableLand ?\n    moddedFarmableLand : foodProduced;\n};\n\nCountry.prototype.handleFood = function () {\n  let population = this.males.concat(this.females);\n  // Sort population by strongest (in strenght and intelligence) to weakest\n  let sortedBeings = population.sort((b,a) => {\n    return (a.str + a.int) - (b.str + b.int);\n  });\n  let self = this;\n  // Strongest eat first\n  sortedBeings.forEach(being => {\n    if (self.foodStorage > 0) {\n      self.foodStorage -= 0.5;\n      being.daysStarving = 0;\n      being.health += 1;\n    } else {\n      // Consequences of not eating\n      self.events.starving += 1;\n      being.daysStarving += 1;\n      being.health -= 5;\n    }\n  });\n};\n\nCountry.prototype.setPower = function () {\n  let sumPowerLevel = this.males.concat(this.females).reduce((sum, el) => {\n    let indivPower = (el.int + el.str);\n    return sum + indivPower;\n  },0);\n  // Power level is a simple aggregation of population's str + int\n  this.powerLevel = sumPowerLevel;\n};\n\nCountry.prototype.setupCountry = function (world) {\n  this.setPower();\n  this.getInfo();\n  this.setDisease(world);\n};\n\nCountry.prototype.cullWeak = function (modifier) {\n  let that = this;\n  let pop = this.males.concat(this.females).filter(human => {\n    return human.age > 10;\n  });\n  let ordered = pop.sort((a,b) => {\n    return a.str - b.str;\n  });\n  // After ordering population by str, set weakest to not alive.\n  // This percentage is affected by a modifier, determined by country Int.\n  let weakest = ordered.slice(0,Math.ceil(pop.length / (20 * modifier)));\n  weakest.forEach(being => {\n    being.alive = false;\n    that.events.numCulled += 1;\n    that.population -= 1;\n  });\n\n  this.cleanseDead();\n};\n\nCountry.prototype.randomEvents = function () {\n\n};\n\nCountry.prototype.simulateWars = function () {\n\n};\n\nCountry.prototype.initiateBirthing = function () {\n  // Order males and females by 'attractiveness' and filter by acceptable\n  // birthing age.\n  let sortedMales = this.males.sort((b,a) => {\n    return (a.str + a.int + a.health) - (b.str + b.int + b.health);\n  }).filter(male => {\n    return male.age >= 5 && male.age < 30;\n  });\n\n  let sortedFemales = this.females.sort((b,a) => {\n    return (a.str + a.int + a.health) - (b.str + b.int + b.health);\n  }).filter(female => {\n    return female.age >= 5 && female.age < 30;\n  });\n\n  // Breed available males with available females within similar attractiveness\n  // range.\n  if (sortedMales.length > 0 && sortedFemales.length > 0) {\n    const smallestGroupSize = sortedMales.length < sortedFemales.length ?\n      sortedMales.length : sortedFemales.length;\n    for (var i = 0; i < smallestGroupSize; i++) {\n      let newBeing = sortedMales[i].breedWith(sortedFemales[i]);\n      sortedMales[i].offspring.push(newBeing);\n      sortedFemales[i].offspring.push(newBeing);\n      if (newBeing.gender === 'male') {\n        this.males.push(newBeing);\n      } else {\n        this.females.push(newBeing);\n      }\n      this.events.numBorn += 1;\n    }\n  }\n};\n\nCountry.prototype.cleanseDead = function () {\n  // Search through population for beings with a false alive attribute, and\n  // and remove them from population array\n  this.males = this.males.filter(male => {\n    return male.alive === true;\n  });\n\n  this.females = this.females.filter(female => {\n    return female.alive === true;\n  });\n};\n\nCountry.prototype.getInfo = function () {\n  // Generational census (can invoke it cyclically depending on computing power)\n  let population = this.males.concat(this.females);\n\n  this.avgInt = population.reduce((sum, el) => {\n    return sum + el.int;\n  },0)/population.length;\n\n  this.avgStr = population.reduce((sum, el) => {\n    return sum + el.str;\n  },0)/population.length;\n\n  this.avgHealth = population.reduce((sum, el) => {\n    return sum + el.health;\n  },0)/population.length;\n\n  this.population = population.length;\n};\n\nCountry.prototype.updateCycle = function (world) {\n  // Invoke every cycle: disease handling, citizen updates, culling of the weak,\n  // food management.\n  this.setDisease(world);\n  let population = this.males.concat(this.females);\n  let self = this;\n  population.forEach(being => {\n    being.updateCycle(self.avgInt, self.diseaseRate);\n  });\n  // Every cycle, cull about 5% of the population, affected by intMod\n  this.cullWeak(this.avgInt/100);\n\n  if (world.cycle % 5 === 0) {\n    // Beings give birth twice a generation\n    this.initiateBirthing();\n  }\n  this.generateFood();\n  this.handleFood();\n};\n\nCountry.prototype.printEvents = function (world) {\n\n  let events = this.events;\n\n  console.log(`${world.generation}: ${this.name}: ${events.numCulled} beings culled;\n    ${events.numBorn} beings born; ${events.health} beings succumbed to\n    disease; ${events.oldAge} beings succumbed to old age; ${events.starving}\n    starved this generation.`);\n    if (this.messages.length > 0) {\n      this.messages.forEach(message => {\n        console.log(message);\n      });\n    }\n  this.events = {\n    numCulled: 0,\n    numBorn: 0,\n    health: 0,\n    oldAge: 0,\n    starving: 0\n  };\n  this.messages = [];\n};\n\nCountry.prototype.updateGen = function (world) {\n  // Updates that occur generationally.\n  this.getInfo();\n  this.randomEvents();\n  this.simulateWars();\n  this.cleanseDead();\n  this.printEvents(world);\n  this.generation += 1;\n};\n\nmodule.exports = Country;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/game_logic/countries.js\n ** module id = 12\n ** module chunks = 0\n **/","function Being (gender, intelligence,\n  strength, health, home, race, parents) {\n  this.gender = gender;\n  this.int = intelligence;\n  this.str = strength;\n  this.health = health;\n  this.home = home;\n  this.race = race;\n  this.parents = parents;\n  this.name = name;\n  this.offspring = [];\n  this.age = 0;\n  this.alive = true;\n  this.daysStarving = 0;\n  this.home.population += 1;\n  this.name = `${this.home.name}${this.home.population}`;\n}\n\nfunction plusOrNeg(degree) {\n  // Returns negative/positive degree (even weight)\n  return degree * (Math.random() >0.5 ? 1 : -1);\n}\n\nBeing.prototype.breedWith = function (partner) {\n  // Take average trait of both partners\n  let offSpringInt = (this.int + partner.int) / 2;\n  let offSpringStr = (this.str + partner.str) / 2;\n  let offSpringHealth = (this.health + partner.health) / 2;\n  let attrs = [offSpringHealth, offSpringInt, offSpringStr].map(attr => {\n    // Genetic trait fluctuation of +/- 20%.\n    return attr + plusOrNeg(0.2) * attr;\n  });\n  let gender = plusOrNeg(1) > 0 ? 'male' : 'female';\n  let race = plusOrNeg(1) > 0 ? this.race : partner.race;\n  let parents = [this, partner];\n  return new Being(gender, ...attrs, this.home, race, parents);\n};\n\nBeing.prototype.harvestFood = function () {\n  return (this.str / 100) * 2;\n};\n\nBeing.prototype.updateCycle = function (countryInt,diseaseRate) {\n  // Being health increases by 1 each cycle, and decreases by country\n  // diseaseRate\n  this.health -= (diseaseRate - 1);\n\n  if (this.health < 20 || this.daysStarving >= 7) {\n    this.alive = false;\n    this.home.events.health += 1;\n    this.home.population -= 1;\n    return;\n  }\n  // Old age limit determined by individual health and aggregate country\n  // intelligence\n  if (this.age > (40 * (this.health / 100) * (countryInt / 100))) {\n    this.alive = false;\n    this.home.events.oldAge += 1;\n    this.home.population -= 1;\n    return;\n  }\n\n  this.age += 1;\n\n  this.int += 1;\n  this.str += this.age < 30 ? 1 : -1;\n};\n\nmodule.exports = Being;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/game_logic/beings.js\n ** module id = 13\n ** module chunks = 0\n **/","const GameMap = require('../views/map.js');\nconst Interface = require('../views/interface.js');\nconst Country = require('../views/country.js');\nconst Wave = require('../views/wave.js');\nconst Util = require('../views/utils.js');\nconst Boat = require('../views/boat.js');\nconst InfoScreen = require('../views/information_screen.js');\nconst LogicBridge = require('./logic_bridge.js');\nconst Player = require('./player.js');\n\nconst DIM_X = window.innerWidth - 50;\nconst DIM_Y = window.innerHeight - 50;\n\nNumber.prototype.between = function(a, b) {\n  let min = Math.min(a, b),\n    max = Math.max(a, b);\n  return this > min && this < max;\n};\n\nclass Game {\n  constructor() {\n    this.humanPlayer = new Player(\"human\",\"humanPlayer\");\n    this.countries = {\n      \"top-left\": {\n        view: \"\",\n        object: \"\",\n        player: null\n      },\n      \"bottom-left\": {\n        view: \"\",\n        object: \"\",\n        player: null\n      },\n      \"top-right\": {\n        view: \"\",\n        object: \"\",\n        player: null\n      },\n      \"bottom-right\": {\n        view: \"\",\n        object: \"\",\n        player: null\n      }\n    };\n    this.allMoveableObjects = [];\n    this.currentAge = 0;\n    this.logicBridge = new LogicBridge(this);\n  }\n\n  setUpGame (countries) {\n    let game = this;\n    Object.keys(countries).forEach((country,i) => {\n      this.countries[country].object = countries[country].country;\n      this.countries[country].view = new Country({ climate: countries[country].country.climate, countryNo: i, width: DIM_X, height: DIM_Y, game: game, size: countries[country].country.size });\n    });\n    this.interface = new Interface({ width: DIM_X, height: DIM_Y, game: game });\n    this.interface.setMessage(\"Shapes of War\");\n    this.map = new GameMap({ width: DIM_X, height: DIM_Y, game: game });\n\n    for (let i = 0; i < 20; i++) {\n      this.allMoveableObjects.push(new Wave({position: i, width: DIM_X, height: DIM_Y, game: game}));\n    }\n    this.infoScreen = new InfoScreen({ width: DIM_X, height: DIM_Y, game: game });\n  }\n\n  draw (ctx) {\n    ctx.clearRect(0,0, DIM_X, DIM_Y);\n    this.map.draw(ctx);\n    this.allMoveableObjects.forEach(object => object.draw(ctx));\n    Object.keys(this.countries).forEach(countryName => this.countries[countryName].view.draw(ctx));\n    this.infoScreen.draw(ctx);\n    this.interface.draw(ctx);\n  }\n\n  isOutOfBounds (pos) {\n    return (pos[0] < 0) || (pos[1] < 0) || (pos[0] > (Game.DIM_X * 0.7)) || (pos[1] > (Game.DIM_Y - 50));\n  }\n\n  handleClick (ctx, event) {\n    console.log({x: event.offsetX, y: event.offsetY, ratioX: event.offsetX/DIM_X, ratioY: event.offsetY/DIM_Y});\n    let ratioX = event.offsetX/DIM_X;\n    let ratioY = event.offsetY/DIM_Y;\n    let msg;\n    switch (true) {\n      case ratioY < 0.1:\n        if (ratioX.between(0.446,0.556)) {\n          this.hideInfoScreen();\n          msg = \"ignore\";\n        } else {\n          this.handleHeaderInteraction(event);\n          msg = \"ignore\";\n        }\n        break;\n      case ratioY.between(0.891,0.991) && ratioX.between(0.810,0.891):\n        this.applyModifier(event);\n        break;\n      case ratioX <0.7 && ratioY > 0.1:\n        msg = \"mainScreenInteraction\";\n        break;\n      case ratioY > 0.88:\n        msg =  \"\";\n        break;\n      case ratioY > 0.82:\n        msg = ratioX > 0.85 ? 'shady-4' : (ratioX > 0.7 ? 'technology-4' : \"\");\n        break;\n      case ratioY > 0.75:\n        msg = ratioX > 0.85 ? 'shady-3' : (ratioX > 0.7 ? 'technology-3' : \"\");\n        break;\n      case ratioY > 0.68:\n        msg = ratioX > 0.85 ? 'shady-2' : (ratioX > 0.7 ? 'technology-2' : \"\");\n        break;\n      case ratioY > 0.60:\n        msg = ratioX > 0.85 ? 'shady-1' : (ratioX > 0.7 ? 'technology-1' : \"\");\n        break;\n      case ratioY > 0.57:\n        msg = \"\";\n        break;\n      case ratioY > 0.48:\n        msg = \"council\";\n        break;\n      case ratioY > 0.44:\n        msg = \"\";\n        break;\n      case ratioY > 0.36:\n        msg = ratioX > 0.85 ? 'military-4' : (ratioX > 0.7 ? 'domestic-4' : \"\");\n        break;\n      case ratioY > 0.29:\n        msg = ratioX > 0.85 ? 'military-3' : (ratioX > 0.7 ? 'domestic-3' : \"\");\n        break;\n      case ratioY > 0.22:\n        msg = ratioX > 0.85 ? 'military-2' : (ratioX > 0.7 ? 'domestic-2' : \"\");\n        break;\n      case ratioY > 0.15:\n        msg = ratioX > 0.85 ? 'military-1' : (ratioX > 0.7 ? 'domestic-1' : \"\");\n        break;\n      default:\n      msg = \"ignore\";\n    }\n    ctx.logicSwitch(msg,event);\n  }\n\n  logicSwitch (command,event) {\n    if (typeof command === 'string') {\n      this.handleInterface(command, event);\n    }\n  }\n\n  handleInterface(command, event) {\n    let ratioX = event.offsetX/DIM_X;\n    let ratioY = event.offsetY/DIM_Y;\n    if (this.interface.instructions && command !== \"ignore\") {\n      switch (true) {\n        case ratioX.between(0.8,0.901) && ratioY.between(0.8,0.902):\n          this.setStage(\"startGame\");\n          break;\n        default:\n\n      }\n    } else if (command === \"mainScreenInteraction\") {\n      this.handleInfoScreenInteraction(command,event);\n    } else {\n      switch (command) {\n        case \"council\":\n          this.setStage(\"bringUpCouncil\");\n          break;\n        default:\n          this.setSelectedInterface(command);\n      }\n    }\n  }\n\n  handleInfoScreenInteraction (command, event) {\n    let ratioX = event.offsetX/DIM_X;\n    let ratioY = event.offsetY/DIM_Y;\n    if (command === \"hideInfoScreen\") {\n      this.interface.hideIfAllowed();\n    } else if (this.interface.stage === \"pickCountry\") {\n      this.handleCountryPicking(event);\n    }else if (this.infoScreen.text.beginning){\n        if (this.infoScreen.text.colors) {\n          this.handleColorPicking(event);\n        } else if (this.infoScreen.text.showAges) {\n          this.handleAgePicking(event);\n        } else if (this.infoScreen.text.decision) {\n          this.handleDecision(event);\n        }\n    } else if (this.infoScreen.text.decision) {\n        this.handleDecision(event);\n    } else if (this.infoScreen.text.betweenAges) {\n      this.handleBetweenAgesDecision(event);\n    }\n  }\n\n  handleDecision(event) {\n    let ratioX = event.offsetX/DIM_X;\n    let ratioY = event.offsetY/DIM_Y;\n    switch (true) {\n      case ratioY.between(0.301,0.519) && ratioX.between(0.58,0.68):\n        if (ratioY.between(0.301,0.364)) {\n          this.infoScreen.selectChoice(\"positive-beginning\");\n        } else if (ratioY.between(0.454,0.519)) {\n          this.infoScreen.selectChoice(\"negative-beginning\");\n        }\n        break;\n      default:\n    }\n  }\n\n  handleBetweenAgesDecision (event) {\n    let ratioX = event.offsetX/DIM_X;\n    let ratioY = event.offsetY/DIM_Y;\n    if (this.currentAge === 0) {\n      switch (true) {\n        case ratioY.between(0.297,0.388) && ratioX.between(0.26,0.345):\n          this.infoScreen.setSelectedTextDescription('selectPerk',0);\n          break;\n        case ratioY.between(0.297,0.388) && ratioX.between(0.46,0.537):\n          this.infoScreen.setSelectedTextDescription('selectPerk',1);\n          break;\n        case ratioY.between(0.45,0.53) && ratioX.between(0.26,0.345):\n          this.infoScreen.setSelectedTextDescription('selectPerk',2);\n          break;\n        case ratioY.between(0.45,0.53) && ratioX.between(0.462,0.545):\n          this.infoScreen.setSelectedTextDescription('selectPerk',3);\n          break;\n        case ratioY.between(0.788,0.851) && ratioX.between(0.313,0.516):\n          this.selectPerk(this.infoScreen.text.currentBetweenAgeMessageSelected);\n          break;\n        default:\n      }\n    }\n\n  }\n\n  handleCountryPicking (event) {\n    let ratioX = event.offsetX/DIM_X;\n    let ratioY = event.offsetY/DIM_Y;\n    switch (true) {\n      case ratioY.between(0.128,0.5) && ratioX.between(0,0.32):\n        this.selectCountry(\"top-left\");\n        break;\n      case ratioY.between(1,0.5) && ratioX.between(0,0.32):\n        this.selectCountry(\"bottom-left\");\n        break;\n      case ratioY.between(0.128,0.5) && ratioX.between(0.7,0.32):\n        this.selectCountry(\"top-right\");\n        break;\n      case ratioY.between(1,0.5) && ratioX.between(0.7,0.32):\n        this.selectCountry(\"bottom-right\");\n        break;\n      default:\n    }\n  }\n\n  handleColorPicking (event) {\n    let ratioX = event.offsetX/DIM_X;\n    let ratioY = event.offsetY/DIM_Y;\n    switch (true) {\n      case ratioY.between(0.271,0.397) && ratioX.between(0.267,0.572):\n        if (ratioX.between(0.267,0.332)) {\n          this.infoScreen.selectKingColor(\"red\");\n        } else if (ratioX.between(0.347,0.412)) {\n          this.infoScreen.selectKingColor(\"lightblue\");\n        } else if (ratioX.between(0.427,0.492)) {\n          this.infoScreen.selectKingColor(\"green\");\n        } else if (ratioX.between(0.508,0.572)) {\n          this.infoScreen.selectKingColor(\"purple\");\n        }\n        break;\n      case ratioY.between(0.454,0.516) && ratioX.between(0.370,0.472):\n        this.pickColor(this.infoScreen.kingColor);\n        break;\n      default:\n    }\n  }\n\n  // For testing purposes only\n  handleHeaderInteraction (event) {\n    let ratioX = event.offsetX/DIM_X;\n    let ratioY = event.offsetY/DIM_Y;\n    switch (true) {\n      case ratioX.between(0.08, 0.118):\n        //start game\n        this.setStage(\"startGame\");\n        break;\n      case ratioX.between(0.137, 0.164):\n        //pick game\n        this.setStage(\"instructions\");\n        break;\n      case ratioX.between(0.18, 0.222):\n        //make decision\n        this.setStage(\"offerDecision\");\n        break;\n      case ratioX.between(0.24, 0.282):\n        //between ages\n        this.setStage(\"betweenAges\");\n        break;\n      case ratioX.between(0.31, 0.351):\n        //resume game\n        this.setStage(\"resumeGame\");\n        break;\n      default:\n\n    }\n  }\n\n  handleAgePicking (event) {\n    let ratioX = event.offsetX/DIM_X;\n    let ratioY = event.offsetY/DIM_Y;\n    switch (true) {\n      case ratioY.between(0.271,0.397) && ratioX.between(0.267,0.572):\n        if (ratioX.between(0.267,0.332)) {\n          this.infoScreen.selectAge(\"10\");\n        } else if (ratioX.between(0.347,0.412)) {\n          this.infoScreen.selectAge(\"20\");\n        } else if (ratioX.between(0.427,0.492)) {\n          this.infoScreen.selectAge(\"30\");\n        } else if (ratioX.between(0.508,0.572)) {\n          this.infoScreen.selectAge(\"50\");\n        }\n        break;\n      case ratioY.between(0.454,0.516) && ratioX.between(0.370,0.472):\n        this.pickAge(this.infoScreen.age);\n        break;\n      default:\n    }\n  }\n\n  pickAge (age) {\n    this.age = age;\n    this.infoScreen.setAge();\n  }\n\n  pickColor (color) {\n    this.humanPlayer.setColor(color);\n    this.infoScreen.setColor();\n  }\n\n  hideInfoScreen () {\n    this.infoScreen.hide();\n  }\n\n  selectCountry (pickedCountry) {\n    this.humanPlayer.setCountry(this.countries[pickedCountry]);\n    this.countries[pickedCountry].player = this.humanPlayer;\n    let remainingCountries =\n      [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\n      .filter(spot => spot !== pickedCountry);\n    let that = this;\n    [\"squares\", \"triangles\", \"pentagons\"].forEach((compName,i) => {\n      let country = this.countries[remainingCountries[i]];\n      let compPlayer = new Player(\"ai\", compName, country);\n      country.player = compPlayer;\n    });\n    this.establishBases();\n  }\n\n  establishBases () {\n    let that = this;\n    Object.keys(this.countries).forEach((countryName,i) => {\n      let newBoat = new Boat({\n        width: DIM_X, height: DIM_Y, game: that,\n        visible: true, position: \"offMap\",\n        destination: countryName,\n        countries: that.countries,\n        purpose: \"establish\"\n      });\n      that.allMoveableObjects.push(newBoat);\n    });\n  }\n\n  establish(country) {\n    country.view.upgradeBuilding();\n  }\n\n  step () {\n    this.moveObjects ();\n  }\n\n  setStage (stage) {\n    switch (stage) {\n      case \"startGame\":\n        this.interface.startGame();\n        this.infoScreen.startGame();\n        this.logicBridge.advanceGeneration();\n        break;\n      case \"instructions\":\n        this.infoScreen.show();\n        this.interface.giveInstructions();\n        this.infoScreen.giveInstructions();\n        break;\n      case \"resumeGame\":\n        this.interface.resumeGame();\n        this.infoScreen.resumeGame();\n        break;\n      case \"offerDecision\":\n        this.infoScreen.show();\n        this.infoScreen.offerDecision();\n        break;\n      case \"betweenAges\":\n        this.infoScreen.show();\n        this.interface.goBetweenAges();\n        this.infoScreen.goBetweenAges();\n        break;\n      case \"bringUpCouncil\":\n        this.infoScreen.show();\n        this.infoScreen.bringUpCouncil();\n        break;\n      default:\n\n    }\n  }\n\n  applyModifier() {\n    if (this.infoScreen.text.betweenAges) {\n      this.setStage(\"resumeGame\");\n      this.modifier = this.interface.selected;\n    }\n  }\n\n  selectPerk (perkNo) {\n    this.humanPlayer.setPerk([\"str\",\"int\",\"devious\",\"average\"][perkNo]);\n    this.setStage(\"startGame\");\n  }\n\n  setSelectedInterface(command) {\n    if (this.infoScreen.text.betweenAges) {\n      this.interface.setSelected(command);\n    }\n  }\n\n  ageUp() {\n    this.currentAge += 1;\n  }\n\n  moveObjects () {\n    this.allMoveableObjects.forEach((object) => object.move());\n  }\n\n  remove (object) {\n    this.allMoveableObjects.splice(this.allMoveableObjects.indexOf(object),1);\n  }\n\n  wrap(pos) {\n    return [\n      Util.wrap(pos[0], (DIM_X - 50) * 0.7), Util.wrap(pos[1], (DIM_Y))\n    ];\n  }\n}\n\n\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/handlers/game.js\n ** module id = 17\n ** module chunks = 0\n **/","let World = require('../game_logic/world');\n\nclass LogicBridge {\n  constructor (game) {\n    this.world = new World(10000);\n    this.countries = {\n      \"top-left\": {\n        country: this.world.countries[0]\n      },\n      \"bottom-left\": {\n        country: this.world.countries[1]\n      },\n      \"top-right\": {\n        country: this.world.countries[2]\n      },\n      \"bottom-right\": {\n        country: this.world.countries[3]\n      },\n    };\n    this.game = game;\n    this.player = game.player;\n    this.setUpGame(this.countries);\n  }\n\n  advanceGeneration () {\n    for (let i = 0; i < 5; i++) {\n      this.world.cycleUp();\n    }\n    this.game.ageUp();\n  }\n\n  introduceChangeToCountry(country) {\n\n  }\n\n  setUpGame () {\n    this.game.setUpGame(this.countries);\n  }\n}\n\nmodule.exports = LogicBridge;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/handlers/logic_bridge.js\n ** module id = 19\n ** module chunks = 0\n **/","class Player {\n  constructor (type, name, country = null) {\n    this.computer = type === \"ai\" ? true : false;\n    this.name = name;\n    this.country = country;\n  }\n\n  setPerk (perk) {\n    this.perk = perk;\n  }\n\n  setColor (color) {\n    this.color = color;\n  }\n\n  setCountry (country) {\n    this.country = country;\n  }\n}\n\nmodule.exports = Player;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/handlers/player.js\n ** module id = 20\n ** module chunks = 0\n **/","const Util = {\n\n  wrap (coord, max) {\n    if (coord < 0) {\n      return max - (coord % max);\n    } else if (coord > max) {\n      return coord % max;\n    } else {\n      return coord;\n    }\n  },\n\n  distance (objOne, objTwo) {\n    let x = Math.pow(objOne.pos[0] - objTwo.pos[0],2);\n    let y = Math.pow(objOne.pos[1] - objTwo.pos[1],2);\n    return Math.sqrt(x + y);\n  },\n\n  fragmentText (text, maxWidth, ctx) {\n    let words = text.split(' '),\n      lines = [],\n      line = \"\";\n    if (ctx.measureText(text).width < maxWidth) {\n      return [text];\n    }\n    while (words.length > 0) {\n      while (ctx.measureText(words[0]).width >= maxWidth) {\n        let tmp = words[0];\n        words[0] = tmp.slice(0, -1);\n        if (words.length > 1) {\n            words[1] = tmp.slice(-1) + words[1];\n        } else {\n            words.push(tmp.slice(-1));\n        }\n      }\n      if (ctx.measureText(line + words[0]).width < maxWidth) {\n        line += words.shift() + \" \";\n      } else {\n        lines.push(line);\n        line = \"\";\n      }\n      if (words.length === 0) {\n        lines.push(line);\n      }\n    }\n    return lines;\n  }\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/views/utils.js\n ** module id = 21\n ** module chunks = 0\n **/","class GameView {\n  constructor (game, ctx) {\n    this.game = game;\n    this.ctx = ctx;\n  }\n\n  start () {\n    let ctx = this.ctx;\n    setInterval(() => {\n      this.game.step();\n      this.game.draw(ctx);\n    }, 10);\n  }\n}\n\n\n\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Life-and-War/views/game_view.js\n ** module id = 22\n ** module chunks = 0\n **/"],"sourceRoot":""}